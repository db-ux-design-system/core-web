@use "@db-ux/core-foundations/build/styles/variables";
@use "@db-ux/core-foundations/build/styles/helpers";
@use "@db-ux/core-foundations/build/styles/colors";
@use "@db-ux/core-foundations/build/styles/animation";
@use "./component";
@use "@db-ux/core-foundations/build/styles/helpers/display";

%db-link-height {
	@include display.display(inline-block);

	&:not([data-wrap="true"]) {
		block-size: variables.$db-sizing-sm;
	}
}

%db-link-default-color {
	color: colors.$db-adaptive-on-bg-basic-emphasis-100-default;

	@include helpers.hover {
		color: color-mix(
			in srgb,
			transparent 25%,
			#{colors.$db-adaptive-on-bg-basic-emphasis-100-default}
		);
	}

	@include helpers.active {
		color: color-mix(
			in srgb,
			transparent 50%,
			#{colors.$db-adaptive-on-bg-basic-emphasis-100-default}
		);
	}
}

%db-default-link {
	@extend %default-fg-transition;
	@extend %db-link-height;
	@extend %db-link-default-color;

	inline-size: fit-content;

	// Link underline
	// TODO: We should evaluate whether we could move this declaration to the @font-face declarations even already
	text-underline-position: from-font;
	text-decoration-thickness: helpers.px-to-rem($pxValue: 1);
	text-decoration-line: underline;

	&:not([data-wrap="true"], [data-variant="inline"]) {
		white-space: nowrap;
	}

	&[data-variant="inline"] {
		@include display.display(inline);
	}

	&:focus-visible {
		border-radius: variables.$db-border-radius-xs;
	}

	// "disabled" links
	&[aria-disabled="true"] {
		opacity: variables.$db-opacity-md;
		pointer-events: none;
	}
}
