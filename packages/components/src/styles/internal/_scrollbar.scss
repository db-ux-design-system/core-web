@use "@db-ux/core-foundations/build/styles/variables";
@use "@db-ux/core-foundations/build/styles/colors";
@use "@db-ux/core-foundations/build/styles/helpers";
@use "@db-ux/core-foundations/build/styles/animation";
@use "./form-components";

$scrollbar-width: helpers.px-to-rem(8);

%scrollbar {
	&[data-field-sizing="content"] {
		&:is([data-hide-resizer="true"], [data-resize="none"]) {
			@supports (field-sizing: content) {
				/* We don't show a scrollbar if we use field-sizing: content and no resizer is available */
				scrollbar-width: none;
			}
		}
	}

	&::-webkit-scrollbar {
		@extend %default-transition;

		z-index: 3;
		inline-size: $scrollbar-width;
		block-size: $scrollbar-width;
		background-color: colors.$db-adaptive-bg-basic-level-1-default;
		border-start-end-radius: variables.$db-border-radius-xs;
	}

	&:is(:hover, :focus) {
		&::-webkit-scrollbar-track,
		&::-webkit-scrollbar-button:single-button {
			background-color: colors.$db-adaptive-bg-basic-transparent-hovered;
		}
	}

	&:read-only {
		&::-webkit-scrollbar-track,
		&::-webkit-scrollbar-button:single-button {
			background-color: colors.$db-adaptive-bg-basic-level-1-default;
		}
	}

	&::-webkit-scrollbar-track {
		background-color: colors.$db-adaptive-bg-basic-transparent-semi-default;
	}

	&::-webkit-scrollbar-thumb {
		background-color: colors.$db-adaptive-bg-basic-transparent-pressed;
	}

	/* Buttons */
	&::-webkit-scrollbar-button:single-button {
		background-color: colors.$db-adaptive-bg-basic-transparent-semi-default;
		background-size: $scrollbar-width;
		background-repeat: no-repeat;
		background-position: center;
		block-size: form-components.$floating-label-size-calc;

		&:is(:hover, :focus) {
			background-color: colors.$db-adaptive-bg-basic-transparent-hovered;
		}

		&:active {
			background-color: colors.$db-adaptive-bg-basic-transparent-pressed;
		}
	}

	/* Up */
	&::-webkit-scrollbar-button:single-button:vertical:decrement {
		border-start-end-radius: variables.$db-border-radius-xs;
		background-image: var(--db-scrollbar-button-vertical-decrement);
	}

	/* Down */
	&::-webkit-scrollbar-button:single-button:vertical:increment {
		background-image: var(--db-scrollbar-button-vertical-increment);
	}

	/* Left */
	&::-webkit-scrollbar-button:single-button:horizontal:decrement {
		background-image: var(--db-scrollbar-button-horizontal-decrement);
	}

	/* Right */
	&::-webkit-scrollbar-button:single-button:horizontal:increment {
		background-image: var(--db-scrollbar-button-horizontal-increment);
	}

	&[data-variant="floating"] {
		&::-webkit-resizer {
			background-color: colors.$db-adaptive-bg-basic-transparent-semi-default;
		}

		&::-webkit-scrollbar-corner {
			background-color: colors.$db-adaptive-bg-basic-level-1-default;
		}
	}

	&::-webkit-resizer {
		background-color: colors.$db-adaptive-bg-basic-transparent-full-default;
		background-size: $scrollbar-width;
		background-repeat: no-repeat;
		background-position: center;
		background-image: var(--db-textarea-resizer-image);
		border-end-end-radius: variables.$db-border-radius-xs;
	}

	&::-webkit-scrollbar-corner {
		@extend %default-transition;

		border-end-end-radius: variables.$db-border-radius-xs;
	}
}

@mixin angular-button-workaround() {
	> .db-button,
	&:is(.db-button) {
		@content;
	}
}

$db-overflow-scroll-buttons-background: 21;
$db-overflow-scroll-buttons-button: 22;

@mixin set-overflow-scroll-button-backgrounds {
	&::before,
	&::after {
		position: absolute;
		z-index: $db-overflow-scroll-buttons-background;
		background-color: colors.$db-adaptive-bg-basic-level-1-default;
		inline-size: variables.$db-sizing-md;
		block-size: calc(
			var(
					--db-overflow-scroll-button-background-block-size,
					#{variables.$db-spacing-fixed-sm}
				) +
				#{variables.$db-sizing-md}
		);
		flex: 0 0 auto;
	}

	&::before {
		inset-inline-start: var(
			--db-overflow-scroll-button-inset-inline-start,
			0
		);
	}

	&::after {
		inset-inline-end: 0;
	}
}

@mixin set-overflow-scroll-buttons {
	/*
	 * Scroll left / right buttons
	 */
	.overflow-scroll-left-button {
		@include angular-button-workaround() {
			inset-inline-start: var(
				--db-overflow-scroll-button-inset-inline-start,
				0
			);
		}
	}

	.overflow-scroll-right-button {
		@include angular-button-workaround() {
			inset-inline-end: 0;
		}
	}

	.overflow-scroll-left-button,
	.overflow-scroll-right-button {
		@include angular-button-workaround() {
			position: absolute;
			z-index: $db-overflow-scroll-buttons-button;
			inset-block: var(
				--db-overflow-scroll-button-inset-block,
				#{variables.$db-spacing-fixed-xs}
			);
		}
	}
}
