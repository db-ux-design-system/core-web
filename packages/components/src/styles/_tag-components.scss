@use "sass:map";
@use "component";
@use "@db-ui/foundations/build/scss/variables";
@use "@db-ui/foundations/build/scss/colors";
@use "@db-ui/foundations/build/scss/helpers";

$interactive-selectors: "label, button:not(.db-tab-remove-button), a";

%set-adaptive-strong-tag {
	--db-current-icon-color: #{colors.$db-current-color-on-contrast-enabled};
	--db-current-color-enabled: #{colors.$db-current-color-on-contrast-enabled};
	--db-current-color-bg-enabled: #{colors.$db-current-color-contrast-high-enabled};
	--db-current-color-border: #{colors.$db-current-color-contrast-high-enabled};

	@extend %set-current-colors;
}

@mixin get-tag-colors() {
	background-color: colors.$db-current-color-bg-lvl-1-enabled;

	&[data-emphasis="strong"] {
		@extend %set-adaptive-strong-tag;
	}

	@each $name in colors.$variant-colors {
		&[data-semantic="#{$name}"] {
			@extend %db-#{$name}-bg-lvl-1;

			&[data-emphasis="strong"] {
				@extend %db-#{$name}-component;
			}
		}
	}
}

// get button and link tags
@mixin get-interactive-selectors() {
	&:not(:has(dbbutton)) button:not(.db-tab-remove-button),
	dbbutton:not(.db-tab-remove-button) > button,
	db-button > button,
	a {
		@content;
	}
}

%set-interactive-weak {
	background-color: colors.$db-current-color-bg-lvl-1-enabled;

	@include helpers.hover {
		background-color: colors.$db-current-color-bg-lvl-1-hover;
	}

	@include helpers.active {
		background-color: colors.$db-current-color-bg-lvl-1-pressed;
	}
}

%set-interactive-strong {
	@extend %set-adaptive-strong-tag;

	@include helpers.hover {
		background-color: colors.$db-current-color-contrast-high-hover;
	}

	@include helpers.active {
		background-color: colors.$db-current-color-contrast-high-pressed;
	}
}

@mixin get-tag-colors-interactive() {
	// overwrite current variables for semantic color
	@each $name in colors.$variant-colors {
		&[data-semantic="#{$name}"] {
			@extend %db-#{$name}-variables;
		}
	}

	label:has(input) {
		@extend %set-interactive-weak;
	}

	&:not([data-emphasis]),
	&[data-emphasis="weak"] {
		// buttons and links should have bg-lvl-2
		@include get-interactive-selectors() {
			@extend %set-interactive-weak;
		}

		// checkbox should have bg-lvl-3 (checked)
		label:has(input[type="checkbox"]:checked) {
			background-color: colors.$db-current-color-bg-lvl-3-enabled;

			@include helpers.hover {
				background-color: colors.$db-current-color-bg-lvl-3-hover;
			}

			@include helpers.active {
				background-color: colors.$db-current-color-bg-lvl-3-pressed;
			}
		}

		// radio should have bg-lvl-3 (checked) without hover/pressed
		label:has(input[type="radio"]:checked) {
			&,
			&:hover,
			&:active {
				background-color: colors.$db-current-color-bg-lvl-3-enabled;
			}
		}
	}

	&[data-emphasis="strong"] {
		@include get-interactive-selectors() {
			@extend %set-interactive-strong;
		}

		label:has(input[type="radio"]:checked) {
			@extend %set-adaptive-strong-tag;
		}

		label:has(input[type="checkbox"]:checked) {
			@extend %set-interactive-strong;
		}

		&:has(a),
		&:has(input:checked) {
			@extend %set-adaptive-strong-tag;
		}
	}
}
