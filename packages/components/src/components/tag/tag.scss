@use "sass:map";
@use "@db-ui/foundations/build/scss/variables";
@use "@db-ui/foundations/build/scss/helpers/component";
@use "@db-ui/foundations/build/scss/helpers/font";
@use "@db-ui/foundations/build/scss/icon/icon-helpers";
@use "@db-ui/foundations/build/scss/helpers/functions";
@use "@db-ui/foundations/build/scss/color/color-variants";
@use "../../styles/button-components";
@use "../../styles/tag-components";
@use "../../styles/icon-passing";

%no-text {
	&[data-no-text="true"] {
		--icon-margin-after: 0;
		@include icon-helpers.is-icon-text-replace();
		padding: 0;

		label {
			@include icon-helpers.is-icon-text-replace();
		}
	}

	&:not([data-no-text="true"]) {
		padding-inline: variables.$db-spacing-fixed-2xs;

		&:has(.db-tab-remove-button) {
			padding-inline-start: variables.$db-spacing-fixed-2xs;
			padding-inline-end: 0;
		}

		&:has(dbbutton):has(dbbutton:not(.db-tab-remove-button)),
		&:has(db-button):has(db-button:not(.db-tab-remove-button)),
		&:not(:has(dbbutton)):has(button:not(.db-tab-remove-button)),
		&:has(a) {
			padding-inline: 0;
		}
	}
}

%db-tag {
	--db-icon-margin-end: #{variables.$db-spacing-fixed-2xs};
	@extend %default-interactive-component;
	@extend %db-overwrite-font-size-sm;
	@extend %default-button;
	@extend %no-text;

	padding-block: 0;
	block-size: variables.$db-sizing-sm;
	min-inline-size: variables.$db-sizing-sm;
	inline-size: fit-content;
	position: relative;

	&:not(:has(#{tag-components.$interactive-selectors})),
	&:has(.db-tab-remove-button) {
		@extend %component-border;
		@include tag-components.get-tag-colors();
	}

	&:has(#{tag-components.$interactive-selectors}) {
		@include icon-passing.icon-passing(variables.$db-spacing-fixed-2xs);
		@include tag-components.get-tag-colors-interactive();
	}

	button:nth-of-type(2),
	dbbutton:nth-of-type(2),
	&:has(db-button):has(dbbutton) .db-tab-remove-button {
		display: none;
	}
}

.db-tag {
	@extend %db-tag;
	position: relative;

	input {
		@extend %default-transition;
		@extend %component-border;
		appearance: none;
		inline-size: 100%;
		block-size: inherit;
		border-radius: component.$default-border-radius;
		position: absolute;

		&:not(:checked) {
			--db-current-base-color: #{variables.$db-colors-neutral-bg};

			&:not(:hover) {
				--db-current-base-color-alpha: 0%;
			}
		}

		&:checked {
			border-width: component.$default-border-height;

			&[type="checkbox"] {
				color: var(--db-current-color);
			}

			&::before {
				content: none;
			}
		}
	}

	a {
		@extend %default-transition;
		@include color-variants.bg-transparent-interactive(false);
		display: inline-flex;
		text-decoration: none;

		&::after {
			--db-icon-margin-start: 0;
			content: "" !important;
		}
	}

	.db-link {
		&:hover,
		&:active {
			color: inherit;
		}
	}

	label {
		@extend %db-overwrite-font-size-sm;
		margin-inline-start: 0;
		z-index: 1;
	}

	&:not(:has(dbbutton,db-button)):has(
			button:not(.db-tab-remove-button)
		),
	&:has(:is(dbbutton,db-button):not(.db-tab-remove-button), a, input) {
		border: none;
	}

	button,
	input:checked {
		@include color-variants.bg-transparent-interactive();
		@include color-variants.get-variant-bg-color(0.08);
	}

	&:not([data-emphasis="strong"]) {
		input[type="radio"]:checked {
			&:enabled {
				&:hover,
				&:active {
					--db-current-base-color-alpha: 92%;
				}
			}
		}
	}

	button,
	a {
		@extend %db-overwrite-font-size-sm;
		@extend %component-border;
		@include color-variants.get-variant-bg-color(0.08);
		block-size: inherit;
		padding: 0 variables.$db-spacing-fixed-2xs;
		border-radius: component.$default-border-radius;
	}

	db-button,
	dbbutton,
	db-checkbox,
	dbcheckbox,
	db-radio,
	dbradio,
	db-link,
	dblink {
		// angular workaround
		block-size: inherit;
	}

	&[data-disabled="true"] {
		opacity: component.$default-disabled-opacity;
		pointer-events: none;
	}

	&[data-overflow="true"] {
		max-inline-size: variables.$db-sizing-2xl;

		& > * {
			inline-size: 100%;
			overflow: hidden;
			text-overflow: ellipsis;
			white-space: nowrap;
		}
	}

	.db-tab-remove-button {
		&:is(button),
		button {
			@include color-variants.get-variant-bg-color(0);
			margin-inline-start: variables.$db-spacing-fixed-2xs;
			block-size: 100%;
		}
	}
}
