@use "@db-ux/core-foundations/build/styles/helpers/functions";
@use "@db-ux/core-foundations/build/styles/variables";
@use "@db-ux/core-foundations/build/styles/colors";
@use "@db-ux/core-foundations/build/styles/fonts";
@use "../../styles/internal/popover-component";
@use "../../styles/internal/component";

$tooltip-arrow-shadow-size: variables.$db-sizing-2xs;

.db-tooltip {
	--default-card-elevation: #{variables.$db-elevation-sm};
	--default-card-border-radius: #{variables.$db-border-radius-xs};

	@extend %db-overwrite-font-size-sm;
	@extend %popover-center;
	@extend %default-popover;

	background-color: colors.$db-adaptive-bg-basic-level-1-default;
	color: colors.$db-adaptive-on-bg-basic-emphasis-100-default;

	// i HTML tags browsers default styling reset
	font-style: normal;

	// surrounding tags styling reset
	font-weight: initial;
	padding: variables.$db-spacing-fixed-2xs variables.$db-spacing-fixed-xs;

	&::after {
		background-color: colors.$db-adaptive-bg-basic-level-1-default;
	}

	// Only for testing
	&[data-e2e-hover="true"] {
		@extend %show-popover;
	}

	// Arrow
	&[data-show-arrow="true"] {
		&::after {
			@extend %component-border;

			content: "";
			box-shadow: variables.$db-elevation-md;
			position: absolute;
			background-color: colors.$db-adaptive-bg-basic-level-1-default;
			inline-size: $tooltip-arrow-shadow-size;
			block-size: $tooltip-arrow-shadow-size;
			clip-path: polygon(
				calc(#{$tooltip-arrow-shadow-size} * -1) calc(#{$tooltip-arrow-shadow-size} * -1),
				calc(100% + #{$tooltip-arrow-shadow-size}) calc(#{$tooltip-arrow-shadow-size} * -1),
				calc(100% + #{$tooltip-arrow-shadow-size}) calc(100% + #{$tooltip-arrow-shadow-size})
			);
			/* stylelint-disable-next-line db-ux/use-border-radius */
			border-radius: 0 2px;
			transform: skew(-8deg, -8deg);
		}
	}

	&:not([data-placement], [data-corrected-placement]),
	&[data-placement^="bottom"]:not([data-corrected-placement]),
	&[data-corrected-placement^="bottom"] {
		&::after {
			inset-inline-start: var(--db-tooltip-arrow-inline-start, 50%);
			inset-block-start: 0;
			translate: -50% -50%;
			rotate: 315deg;
		}
	}

	&[data-placement^="top"]:not([data-corrected-placement]),
	&[data-corrected-placement^="top"] {
		&::after {
			inset-inline-start: var(--db-tooltip-arrow-inline-start, 50%);
			inset-block-end: 0;
			translate: -50% 50%;
			rotate: 135deg;
		}
	}

	&[data-placement^="right"]:not([data-corrected-placement]),
	&[data-corrected-placement^="right"] {
		&::after {
			inset-block-start: var(--db-tooltip-arrow-block-start, 50%);
			inset-inline-start: 0;
			translate: -50% -50%;
			rotate: 225deg;
		}
	}

	&[data-placement^="left"]:not([data-corrected-placement]),
	&[data-corrected-placement^="left"] {
		&::after {
			inset-block-start: var(--db-tooltip-arrow-block-start, 50%);
			inset-inline-end: 0;
			translate: 50% -50%;
			rotate: 45deg;
		}
	}

	&[data-emphasis="strong"] {
		background-color: colors.$db-adaptive-bg-inverted-contrast-high-default;
		color: colors.$db-adaptive-on-bg-inverted-default;

		&::before {
			--db-icon-color: #{colors.$db-adaptive-on-bg-inverted-default};
		}

		&::after {
			background-color: colors.$db-adaptive-bg-inverted-contrast-high-default;
		}
	}
}

// Global styles

@mixin show-popover($state) {
	[data-has-tooltip="true"] {
		&:#{$state} {
			.db-tooltip:first-of-type {
				@extend %show-popover;
			}
		}
	}
}

[data-has-tooltip="true"] {
	position: var(--db-tooltip-parent-position, relative);
}

$popover-states: "hover", "focus-visible";

@each $state in $popover-states {
	@include show-popover($state);
}
