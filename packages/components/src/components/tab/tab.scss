@use "@db-ui/foundations/build/scss/variables";
@use "@db-ui/foundations/build/scss/colors";
@use "../../styles/component";

.db-tab {
	display: inline-flex;
	position: relative;

	&:has(input:disabled) {
		opacity: variables.$db-opacity-sm;
	}

	&:has(input:focus-visible) {
		&::before {
			@extend %focus-placeholder;

			content: "";
			position: absolute;
			inset-block-start: 0;
			inset-inline-start: 0;
			inline-size: 100%;
			block-size: 100%;
			outline-offset: variables.$db-spacing-fixed-2xs;
			border-radius: variables.$db-border-radius-md;
			z-index: 1;
			pointer-events: none;
		}
	}

	label {
		@extend %default-interactive-component;
		// @extend %transparent-border;
		@include colors.bg-transparent-interactive();
		position: relative;
		padding: variables.$db-spacing-fixed-xs;
		align-items: center;
		white-space: nowrap;
		border: none;

		&:has(input:checked) {
			font-weight: 700;
		}
	}

	input {
		&[type="radio"] {
			position: absolute;
			appearance: none;
			inline-size: 100%;
			margin-inline-end: initial;
			inset: 0;
			background: var(--db-current-bg-color, #{colors.$db-base-bg});
			border-radius: variables.$db-border-radius-md;
			z-index: -1;

			&:focus-within,
			&:focus-visible {
				outline: none;
				box-shadow: none;
			}
		}
	}

	&.is-icon-text-replace[data-icon]::before {
		margin-inline-end: 0;
	}

	&[data-icon]::before {
		margin-inline-end: variables.$db-spacing-fixed-sm;
	}

	&[data-icon-after]::after {
		margin-inline-start: variables.$db-spacing-fixed-sm;
	}

	&[data-width="full"] {
		inline-size: 100%;

		&[data-alignment="center"] {
			text-align: center;
			justify-content: center;
		}
	}
}
