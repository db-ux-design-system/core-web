@use "@db-ui/foundations/build/scss/variables";
@use "@db-ui/foundations/build/scss/colors";
@use "../../styles/component";

.db-tab {
	position: relative;
	display: inline-flex;
	list-style-type: none;

	&:has(input:disabled) {
		opacity: variables.$db-opacity-sm;
	}

	label {
		@extend %default-interactive-component;
		@include colors.bg-transparent-interactive();
		padding: variables.$db-spacing-fixed-xs;
		align-items: center;
		white-space: nowrap;
		border: none;

		overflow: hidden;
		text-overflow: ellipsis;

		&:has(input:checked) {
			font-weight: 700;
		}
	}

	input {
		position: absolute;
		appearance: none;
		inline-size: 100%;
		margin-inline-end: initial;
		inset: 0;
		background: colors.$db-current-bg-color;
		border-radius: variables.$db-border-radius-md;
		z-index: -1;

		/*
		focus must be set on input:
		- parent label tag may use before AND after for displaying icons
		- placed on li.db-tab focus would get cut off partially by by overflow hidden (orientation vertical)
		 */
		&:focus-within,
		&:focus-visible {
			&:is(input[type="radio"]) {
				outline: none;
				box-shadow: none;
			}

			&::before {
				@extend %focus-placeholder;

				content: "";
				position: absolute;
				inset: 0;
				outline-offset: variables.$db-spacing-fixed-2xs;
				border-radius: variables.$db-border-radius-md;
				z-index: 10;
				pointer-events: none;
			}
		}
	}

	.is-icon-text-replace[data-icon]::before {
		margin-inline-end: 0;
	}

	label[data-icon]::before {
		margin-inline-end: variables.$db-spacing-fixed-sm;
	}

	label[data-icon-after]::after {
		margin-inline-start: variables.$db-spacing-fixed-sm;
	}
}
