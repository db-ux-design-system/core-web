@use "@db-ui/foundations/build/scss/variables";
@use "@db-ui/foundations/build/scss/colors";

$max-tabs: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10];

%angular-workaround {
	db-tab-list,
	dbtablist {
		@each $index in $max-tabs {
			&:has([id$="-tab-#{$index}"]:checked) {
				& ~ dbtabpanel > [id$="-tab-panel-#{$index}"],
				& ~ db-tab-panel > [id$="-tab-panel-#{$index}"] {
					display: block;
				}
			}
		}
	}
}

@mixin angular-button-workaround() {
	& > .db-button,
	&:is(.db-button) {
		@content;
	}
}

.db-tabs {
	$db-tabs-z-index-tab-list: 20;
	$db-tabs-z-index-button-background: 21;
	$db-tabs-z-index-button: 22;

	@extend %angular-workaround;
	display: flex;
	flex-direction: column;
	flex-direction: row;
	flex-wrap: wrap;
	inline-size: 100%;
	position: relative;

	.db-tab-panel {
		padding: 0 variables.$db-spacing-fixed-xs;
	}

	&:not([data-orientation="vertical"]) {
		.db-tab-panel {
			inline-size: 100%;
		}
	}

	&[data-orientation="vertical"] {
		flex-direction: row;

		.db-tab-panel {
			padding: variables.$db-spacing-fixed-xs 0;
		}
	}

	.db-tab-list {
		max-inline-size: 100%;
		z-index: $db-tabs-z-index-tab-list;

		@each $index in $max-tabs {
			&:has([id$="-tab-#{$index}"]:checked)
				~ [id$="-tab-panel-#{$index}"] {
				display: block;
			}
		}
	}

	&[data-width="full"] {
		.db-tab-list {
			inline-size: 100%;
		}

		.db-tab,
		.db-tab label {
			inline-size: 100%;
		}

		&[data-alignment="center"] {
			.db-tab label {
				text-align: center;
				justify-content: center;
			}
		}
	}

	&[data-scroll-behaviour="arrows"] {
		.db-tab-list-scroll-container {
			&::-webkit-scrollbar {
				display: none;
			}
		}

		/*
		 * pseudo elements cover tab-list when needed
		 * todo describe better
		 */
		&:has(.tabs-scroll-left) {
			&::before {
				content: "";
			}
		}

		&:has(.tabs-scroll-right) {
			&::after {
				content: "";
			}
		}

		&:has(.db-button) {
			&::before,
			&::after {
				position: absolute;
				z-index: $db-tabs-z-index-button-background;
				background-color: colors.$db-current-bg-color;
				inline-size: variables.$db-sizing-md;
				block-size: calc(
					#{variables.$db-spacing-fixed-sm} + #{variables.$db-sizing-md}
				);
				flex: 0 0 auto;
			}

			&::before {
				inset-inline-start: 0;
			}

			&::after {
				inset-inline-end: 0;
			}
		}

		/*
		 * Scroll left / right buttons
		 */
		.tabs-scroll-left {
			@include angular-button-workaround() {
				inset-inline-start: 0;
			}
		}

		.tabs-scroll-right {
			@include angular-button-workaround() {
				inset-inline-end: 0;
			}
		}

		.tabs-scroll-left,
		.tabs-scroll-right {
			@include angular-button-workaround() {
				position: absolute;
				z-index: $db-tabs-z-index-button;
				inset-block: variables.$db-spacing-fixed-xs;
			}
		}
	}
}
