@use "@db-ui/foundations/build/scss/variables";
@use "@db-ui/foundations/build/scss/colors";
@use "../../styles/db-puls";
@use "../../styles/scrollbar";
@use "../../styles/form-components";

%horizontal-puls {
	.db-tab input {
		@include db-puls.set-db-puls-horizontal;

		&::after {
			inset-block-start: calc(
				#{variables.$db-spacing-fixed-xs} * 2 + #{form-components.$font-size-height} +
					#{variables.$db-border-height-sm} * 2
			);
			inset-block-end: auto;
		}

		&:checked {
			@include db-puls.show-db-puls-horizontal;
		}
	}
}

%vertical-puls {
	.db-tab input {
		@include db-puls.set-db-puls-vertical;

		&:checked {
			@include db-puls.show-db-puls-vertical;
		}
	}
}

.db-tab-list {
	position: relative;

	.db-tab-list-scroll-container {
		@extend %scrollbar;
		display: flex;
		gap: variables.$db-spacing-fixed-sm;
		scroll-behavior: smooth;

		.db-tab {
			position: relative;

			& input {
				@extend %db-puls;
			}
		}
	}

	&:not([aria-orientation="vertical"]) {
		.db-tab-list-scroll-container {
			@extend %horizontal-puls;
			overflow-x: auto;
			overflow-y: hidden;
			inline-size: 100%;

			.db-tab {
				margin-block: variables.$db-spacing-fixed-sm;
			}

			db-tab {
				&:first-of-type {
					.db-tab {
						margin-inline-start: variables.$db-spacing-fixed-sm;
					}
				}

				&:last-of-type {
					.db-tab {
						margin-inline-end: variables.$db-spacing-fixed-sm;
					}
				}
			}

			&:not(:has(db-tab)) {
				.db-tab {
					&:first-of-type {
						margin-inline-start: variables.$db-spacing-fixed-sm;
					}

					&:last-of-type {
						margin-inline-end: variables.$db-spacing-fixed-sm;
					}
				}
			}
		}

		&::before {
			@extend %adaptive-neutral-component;
			content: "";
			border-radius: variables.$db-border-radius-md;
			block-size: variables.$db-border-height-lg;
			position: absolute;

			inset-inline: variables.$db-spacing-fixed-sm;

			/* 2x padding + 1x margin + text + 3x border  */
			inset-block-start: calc(
				2 * #{variables.$db-spacing-fixed-xs} + #{variables.$db-spacing-fixed-sm} +
					#{form-components.$font-size-height} + #{variables.$db-border-height-sm} *
					3
			);
		}
	}

	&[aria-orientation="vertical"] {
		.db-tab-list-scroll-container {
			@extend %vertical-puls;
			flex-direction: column;
			overflow-x: hidden;
			overflow-y: auto;
			block-size: 100%;

			.db-tab {
				margin-inline: variables.$db-spacing-fixed-sm;
			}

			db-tab {
				&:first-of-type {
					.db-tab {
						margin-block-start: variables.$db-spacing-fixed-sm;
					}
				}

				&:last-of-type {
					.db-tab {
						margin-block-end: variables.$db-spacing-fixed-sm;
					}
				}
			}

			&:not(:has(db-tab)) {
				.db-tab {
					&:first-of-type {
						margin-block-start: variables.$db-spacing-fixed-sm;
					}

					&:last-of-type {
						margin-block-end: variables.$db-spacing-fixed-sm;
					}
				}
			}
		}

		&::before {
			@extend %adaptive-neutral-component;
			content: "";
			border-radius: variables.$db-border-radius-md;
			inline-size: variables.$db-border-height-lg;
			inset-block: variables.$db-spacing-fixed-sm;
			position: absolute;

			inset-inline-start: calc(
				-1 * #{variables.$db-spacing-fixed-xs} + #{variables.$db-spacing-fixed-sm} +
					#{variables.$db-border-height-sm}
			);
		}
	}
}
