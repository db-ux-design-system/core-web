@use "@db-ux/core-foundations/build/styles/variables";
@use "@db-ux/core-foundations/build/styles/colors";
@use "@db-ux/core-foundations/build/styles/helpers";
@use "../../styles/internal/component";

:is(a[href], button) {
	// Resetting button and link specific declarations
	&:has(.db-card) {
		text-decoration: unset;
		margin: unset;
		border: unset;
		background-color: transparent;
		padding: unset;
		font: inherit;
	}

	@include helpers.hover {
		> .db-card,
		> db-card > .db-card {
			background-color: variables.$db-global-bg-color-hovered;
		}
	}

	@include helpers.active {
		> .db-card,
		> db-card > .db-card {
			background-color: variables.$db-global-bg-color-pressed;
		}
	}
}

.db-card {
	@extend %default-card;
	@include component.get-data-spacing;
	@include helpers.display(flex);

	flex-direction: column;
	background-color: variables.$db-global-bg-color-default;

	&[data-behavior="interactive"] {
		@include helpers.hover {
			background-color: variables.$db-global-bg-color-hovered;
		}

		@include helpers.active {
			background-color: variables.$db-global-bg-color-pressed;
		}
	}

	&[data-elevation-level="2"] {
		--db-global-bg-color-default: #{colors.$db-adaptive-bg-basic-level-2-default};
		--db-global-bg-color-hovered: #{colors.$db-adaptive-bg-basic-level-2-hovered};
		--db-global-bg-color-pressed: #{colors.$db-adaptive-bg-basic-level-2-pressed};
	}

	&[data-elevation-level="3"] {
		--db-global-bg-color-default: #{colors.$db-adaptive-bg-basic-level-3-default};
		--db-global-bg-color-hovered: #{colors.$db-adaptive-bg-basic-level-3-hovered};
		--db-global-bg-color-pressed: #{colors.$db-adaptive-bg-basic-level-3-pressed};
	}
}
