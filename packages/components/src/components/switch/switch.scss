@use "@db-ui/foundations/build/scss/variables";
@use "@db-ui/foundations/build/scss/colors";
@use "@db-ui/foundations/build/scss/fonts";
@use "@db-ui/foundations/build/scss/helpers";
@use "@db-ui/foundations/build/scss/icons";
@use "../../styles/form-components";

$switch-fixed-padding: helpers.to-rem(2);
$switch-border-workaround: calc(
	#{variables.$db-border-height-2xs} / 2 * var(--device-pixel-ratio, 0)
);
$switch-active-thumb-size: calc(
	#{form-components.$font-size-height} - #{$switch-border-workaround}
);

$checked-active-transition-width: calc(
	#{$switch-active-thumb-size} + #{variables.$db-spacing-fixed-2xs}
);

%active-transition {
	&::before {
		inline-size: calc(
			#{$switch-active-thumb-size} - #{$switch-fixed-padding} * 2 + #{variables.$db-spacing-fixed-2xs}
		);
	}

	&:checked {
		&::before {
			inline-size: #{$checked-active-transition-width};
		}
	}
}

.db-switch {
	@extend %check-element;
	justify-content: space-between;
	user-select: none;

	@include helpers.active {
		& > input {
			@extend %active-transition;
		}
	}

	& > input {
		--db-icon-margin-start: 0;
		--thumb-position: calc(
			0% + #{$switch-fixed-padding} - #{$switch-border-workaround}
		);

		@include icons.set-icon("close", "after");
		appearance: none;

		inline-size: calc(#{form-components.$font-size-height} * 2);
		block-size: form-components.$font-size-height;

		display: flex;
		align-items: center;
		justify-content: space-between;

		background: colors.$db-current-color-bg-enabled;
		border-radius: variables.$db-border-radius-full;

		@include helpers.active {
			@extend %active-transition;
		}

		&::after,
		&::before {
			@extend %db-overwrite-font-size-sm;
		}

		&::after {
			visibility: hidden;
			align-self: center;
			transform: translateX(calc(0% - #{$switch-fixed-padding}));
		}

		// thumb
		&::before {
			content: "";
			inline-size: calc(
				#{form-components.$font-size-height} - #{$switch-fixed-padding} *
					2
			);
			block-size: calc(
				#{form-components.$font-size-height} - #{$switch-fixed-padding} *
					2
			);
			background: colors.$db-current-color-enabled;
			border-radius: variables.$db-border-radius-full;
			transform: translateX(var(--thumb-position));

			transition:
				inline-size variables.$db-transition-duration-fast
					variables.$db-transition-timing-emotional,
				block-size variables.$db-transition-duration-fast
					variables.$db-transition-timing-emotional,
				transform variables.$db-transition-duration-fast
					variables.$db-transition-timing-emotional;

			// Adopted by https://www.heise.de/developer/artikel/a11y-Reduced-Motion-4356171.html
			@media (prefers-reduced-motion: reduce) {
				transition-duration: 0.01s !important;
			}
		}

		/* positioned at the end of the track: track length - 100% (thumb width) */
		&:checked {
			--db-current-icon-color: #{colors.$db-current-color-bg-enabled};
			--thumb-position: calc(
				calc(#{$switch-active-thumb-size} * 2) - 100% - #{variables.$db-border-height-2xs} *
					2 + #{$switch-border-workaround}
			);

			background: colors.$db-current-color-enabled;

			@include helpers.hover {
				background-color: colors.$db-current-color-hover;
			}

			@include helpers.active {
				background-color: colors.$db-current-color-pressed;
			}

			&::before {
				inline-size: $switch-active-thumb-size;
				block-size: $switch-active-thumb-size;
				background: colors.$db-current-color-bg-enabled;
			}
		}
	}

	&[data-variant="hidden"] {
		gap: 0;
	}

	&[data-size="small"] {
		gap: variables.$db-spacing-fixed-2xs;

		& > input {
			&::after,
			&::before {
				@extend %db-overwrite-font-size-xs;
			}
		}
	}

	&[data-emphasis="strong"] {

		@include helpers.active {
			& > input {
				&::before {
					inline-size: #{$checked-active-transition-width};
				}
			}
		}

		& > input {
			--db-check-element-border-color: #{colors.$db-current-color-bg-enabled};
			@extend %db-critical-component;

			@include helpers.hover {
				background-color: colors.$db-current-color-bg-hover;
			}

			@include helpers.active {
				background-color: colors.$db-current-color-bg-pressed;

				&::before {
					inline-size: #{$checked-active-transition-width};
				}
			}

			&:checked {
				@extend %db-successful-component;

				&::before {
					background: colors.$db-current-color-enabled;
				}
			}

			&::before {
				inline-size: $switch-active-thumb-size;
				block-size: $switch-active-thumb-size;
			}
		}
	}

	&[data-emphasis="strong"],
	&[data-visual-aid="true"] {
		& > input {
			&::after {
				visibility: visible;
				inline-size: $switch-active-thumb-size;
				block-size: $switch-active-thumb-size;
			}

			&:checked {
				@include icons.set-icon("done", "after");

				&::after {
					transform: translateX(
						calc(-100% - #{$switch-fixed-padding} * 2)
					);
					inline-size: $switch-active-thumb-size;
					block-size: $switch-active-thumb-size;
				}
			}
		}
	}

	& > input {
		&[data-aid-icon] {
			&:not(:checked) {
				&::after {
					content: attr(data-aid-icon);
				}
			}
		}

		&[data-aid-icon-after] {
			&:checked {
				&::after {
					content: attr(data-aid-icon-after);
				}
			}
		}
	}
}
