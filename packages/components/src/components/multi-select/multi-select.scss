@use "@db-ux/core-foundations/build/styles/variables";
@use "@db-ux/core-foundations/build/styles/colors";
@use "@db-ux/core-foundations/build/styles/helpers";
@use "@db-ux/core-foundations/build/styles/screen-sizes";
@use "../../styles/internal/form-components";
@use "../../styles/internal/component";
@use "../../styles/select-components";
@use "../../styles/internal/scrollbar";
@use "../../styles/dialog-init";

%multi-select-placement-top {
	@include screen-sizes.screen("sm") {
		inset-block-end: 100%;
		margin-block-start: variables.$db-spacing-fixed-md;
	}
}

%multi-select-placement-vertical {
	@include screen-sizes.screen("sm") {
		&[data-placement$="end"] {
			.db-multi-select-dropdown:not([data-outside-vx="right"]) {
				inset-inline-end: 0;
			}
		}

		.db-multi-select-dropdown[data-outside-vx="right"] {
			inset-inline-end: 0;
		}
	}
}

%multi-select-placement {
	&:not([data-placement]),
	&[data-placement^="bottom"] {
		@extend %multi-select-placement-vertical;
		.db-multi-select-dropdown:not([data-outside-vy="bottom"]) {
			@include screen-sizes.screen("sm") {
				inset-block-start: 100%;
				margin-block-end: variables.$db-spacing-fixed-md;
			}
		}
		.db-multi-select-dropdown[data-outside-vy="bottom"] {
			@extend %multi-select-placement-top;
		}
	}

	&[data-placement^="top"] {
		@extend %multi-select-placement-vertical;
		.db-multi-select-dropdown:not([data-outside-vy="top"]) {
			@extend %multi-select-placement-top;
		}
	}
}

.db-multi-select {
	--db-form-component-padding-inline-end: calc(
		#{select-components.$select-icon-padding} + #{variables.$db-sizing-sm} +
			#{variables.$db-spacing-fixed-sm}
	);
	--db-form-component-padding-inline-start: calc(
		#{select-components.$has-before-padding} +
			#{variables.$db-spacing-fixed-xs}
	);

	@extend %select-icon;
	@extend %select-placeholder;
	@extend %multi-select-placement;

	position: relative;
	min-inline-size: variables.$db-sizing-xl;

	&:not([data-width]),
	&[data-width="full"] {
		&,
		.db-multi-select-form-field {
			inline-size: 100%;
		}
	}

	@include form-components.set-default-form-component(summary);

	[id$="-placeholder"] {
		display: none;
		margin-inline-end: calc(
			#{form-components.$font-size-height} +
				#{variables.$db-spacing-fixed-sm}
		);
	}

	&:has(.db-multi-select-form-field:empty),
	&:has(.db-multi-select-form-field > :empty) {
		--db-form-component-padding-inline-end: #{select-components.$select-icon-padding};
		[id$="-placeholder"] {
			display: block;
		}
	}

	/* custom elements workaround */
	> db-button > .db-button[data-icon="cross"][data-variant="ghost"],
	> .db-button[data-icon="cross"][data-variant="ghost"] {
		--db-tooltip-parent-position: absolute;
		inset-block-start: form-components.$icon-inline-block-start;
		transform: translateY(-50%);

		/* padding form field + gap + icon size */
		inset-inline-end: calc(
			#{select-components.$select-icon-padding} +
				#{variables.$db-spacing-fixed-xs}
		);

		@include helpers.divider("right", "after");

		&::after {
			position: absolute;
			inset-inline-end: calc(
				-1 * #{variables.$db-spacing-fixed-xs} -
					#{variables.$db-border-height-3xs}
			);
		}
	}

	.db-tooltip {
		@extend %db-neutral-variables;
	}

	&[data-selected-type="tag"] {
		.db-multi-select-form-field {
			&:has(:not(div:empty)) {
				padding-block: variables.$db-spacing-fixed-xs;
				block-size: auto;

				> div {
					flex-wrap: wrap;
				}
			}

			> button {
				align-self: start;
			}
		}
	}

	> details[open] {
		> summary {
			&::before {
				position: fixed;
				z-index: 1;
				inset: 0;
				content: "";
				cursor: default;
			}

			@include screen-sizes.screen("sm", "max") {
				&::before {
					position: fixed;
					z-index: 9998;
					background-color: dialog-init.$backdrop-color;
					opacity: dialog-init.$backdrop-opacity-weak;
				}
			}
		}
	}

	&[data-variant="floating"] {
		.db-multi-select-form-field {
			> span {
				padding-block-start: form-components.$floating-label-padding-block-start;
			}
		}
	}
}
