@use "sass:map";
@use "@db-ux/core-foundations/build/styles/fonts";
@use "@db-ux/core-foundations/build/styles/variables";
@use "@db-ux/core-foundations/build/styles/helpers";
@use "@db-ux/core-foundations/build/styles/colors";
@use "@db-ux/core-foundations/build/styles/icons";

.db-infotext {
	--db-icon-margin-end: #{variables.$db-spacing-fixed-2xs};

	@extend %db-overwrite-font-size-sm;
	@include display.display(flex);
	
	white-space: pre-wrap;

	@include icons.has-no-icon {
		@include icons.to-filled-icon;
		@include icons.set-icon("information_circle");
	}

	&[data-size="small"] {
		@extend %db-overwrite-font-size-xs;
	}

	&[data-semantic="adaptive"],
	&:not([data-semantic]) {
		color: colors.$db-adaptive-on-bg-basic-emphasis-80-default;

		&::before {
			--db-icon-color: #{colors.$db-adaptive-on-bg-basic-emphasis-70-default};
		}
	}

	@each $name, $colors in colors.$variant-colors {
		&[data-semantic="#{$name}"] {
			@include icons.variant-icons($name);

			color: var(--db-#{$name}-on-bg-basic-emphasis-80-default);

			&::before {
				--db-icon-color: var(
					--db-#{$name}-on-bg-basic-emphasis-70-default
				);
			}
		}
	}

	// Workaround for current stencil implementation for form-components
	&:has(> .db-infotext) {
		margin: 0;

		&::before {
			content: none;
		}
	}
}
