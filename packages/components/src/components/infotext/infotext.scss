@use "sass:map";
@use "@db-ux/core-foundations/build/styles/fonts";
@use "@db-ux/core-foundations/build/styles/variables";
@use "@db-ux/core-foundations/build/styles/helpers";
@use "@db-ux/core-foundations/build/styles/colors";
@use "@db-ux/core-foundations/build/styles/icons";
@use "@db-ux/core-foundations/build/styles/texts/classes/all";

.db-infotext {
	--db-icon-margin-end: #{variables.$db-spacing-fixed-2xs};

	@include helpers.display(flex);

	@include icons.has-no-icon {
		@include icons.to-filled-icon;
		@include icons.set-icon("information_circle");
	}

	&:not([data-size="small"]) {
		@extend %db-overwrite-font-size-sm;
	}

	&[data-size="small"] {
		@extend %db-overwrite-font-size-xs;
	}

	color: variables.$db-global-on-bg-color-default;

	&::before {
		--db-icon-color: #{variables.$db-global-highlight-color-default};
	}

	&:not([data-text]) {
		@extend [data-text="vibrant"];
	}

	@each $name, $colors in colors.$variant-colors {
		&[data-semantic="#{$name}"] {
			@extend %db-#{$name}-variables;
			@include icons.variant-icons($name);
		}
	}

	// Workaround for current stencil implementation for form-components
	&:has(> .db-infotext) {
		margin: 0;

		&::before {
			content: none;
		}
	}
}
