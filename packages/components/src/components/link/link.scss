@charset "utf-8";
@use "@db-ux/core-foundations/build/styles/fonts";
@use "@db-ux/core-foundations/build/styles/variables";
@use "@db-ux/core-foundations/build/styles/animation";
@use "@db-ux/core-foundations/build/styles/helpers";
@use "@db-ux/core-foundations/build/styles/icons";
@use "@db-ux/core-foundations/build/styles/colors";
@use "@db-ux/core-foundations/build/styles/texts/classes/all";
@use "../../styles/internal/link-components";

.db-link {
	--db-icon-margin-start: #{variables.$db-spacing-fixed-2xs};
	--db-icon-vertical-align: top;

	@extend %db-default-link;
	@extend %db-overwrite-font-size-md;

	a {
		// Workaround for angular
		@extend %db-link-height;
	}

	&[data-content="internal"] {
		&:not([data-variant="inline"]) {
			@include icons.set-icon("arrow_right", "after");
		}
	}

	&[data-content="external"] {
		&:not([data-variant="inline"]) {
			@include icons.set-icon("arrow_up_right", "after");
		}
	}

	// We couldn't extend any existing SCSS placeholders, as this is a special construct
	&[data-variant="brand"] {
		@extend %db-brand-variables;
	}

	&:not([data-text]) {
		&[data-variant="brand"] {
			@extend [data-text="vibrant"];
		}
	}

	&[data-size="small"] {
		--db-icon-margin-start: #{variables.$db-spacing-fixed-3xs};

		@extend %db-overwrite-font-size-sm;
	}
}
