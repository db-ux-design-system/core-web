@charset "utf-8";

@use "@db-ui/foundations/build/scss/tonality/font";
@use "@db-ui/foundations/build/scss/variables";
@use "@db-ui/foundations/build/scss/animation/transitions";
@use "@db-ui/foundations/build/scss/helpers/functions";
@use "@db-ui/foundations/build/scss/icon/icon-helpers";
@use "@db-ui/foundations/build/scss/color/colors";
@use "../../styles/component";

%db-link-height {
	display: inline-block;
	block-size: variables.$db-sizing-sm;
}

.db-link {
	@extend %default-fg-transition;
	@extend %db-link-height;
	inline-size: fit-content;
	align-items: center;

	// Link underline
	// TODO: We should evaluate whether we could move this declaration to the @font-face declarations even already
	text-underline-position: from-font;
	text-decoration-thickness: functions.to-rem($pxValue: 1);

	white-space: nowrap;

	&:hover {
		color: color-mix(
			in srgb,
			transparent 25%,
			colors.$db-neutral-on-bg
		);
	}

	&:active {
		color: color-mix(
			in srgb,
			transparent 50%,
			colors.$db-neutral-on-bg
		);
	}

	a {
		// Workaround for angular
		@extend %db-link-height;
	}

	// "disabled" links
	&[aria-disabled="true"] {
		// TODO: probably move these to the tokens as well
		opacity: var(--db-disabled-text-opacity, 0.5);
		pointer-events: none;
	}

	&:not([data-variant="inline"]) {
		&[data-content="internal"] {
			@include icon-helpers.icon("arrow_forward", "after");
		}

		&[data-content="external"] {
			@include icon-helpers.icon("link_external", "after");
		}
	}

	&:focus-visible {
		border-radius: component.$default-border-radius;
	}

	&[data-content="internal"],
	&[data-content="external"] {
		--db-icon-margin-start: #{variables.$db-spacing-fixed-2xs};

		&:focus-visible {
			outline-offset: var(--db-focus-outline-offset, 1px);
		}

		&::after {
			margin-inline-start: var(--db-icon-margin-start);
		}
	}

	// We couldn't extend any existing SCSS placeholders, as this is a special construct
	&[data-variant="primary"] {
		--db-current-color: #{colors.$db-primary-text};
		color: var(--db-current-color);

		&:hover {
			--db-current-color: #{colors.$db-primary-text-hover};
		}

		&:active {
			--db-current-color: #{colors.$db-primary-text-pressed};
		}
	}

	&[data-size="small"] {
		--db-icon-margin-start: #{variables.$db-spacing-fixed-3xs};
		@extend %db-overwrite-font-size-sm;
	}
}
