@use "@db-ui/foundations/build/scss/variables" as *;
@use "@db-ui/foundations/build/scss/variables.global" as *;
@use "@db-ui/foundations/build/scss/helpers/component" as *;
@use "@db-ui/foundations/build/scss/color/color-variants" as *;
@use "@db-ui/foundations/build/scss/icon/icons.helpers" as *;

.db-navigation-item {
	@extend %default-interactive-component;
	@extend %default-background-transition;
	@extend %transparent-border;

	@include get-variant-bg-color(0);
	display: inline-flex;
	cursor: pointer;
	width: 100%;

	position: relative;

	font-weight: normal;
	border-radius: $default-card-border-radius;
	padding: $db-spacing-fixed-xs $db-spacing-fixed-sm;
	white-space: nowrap; // we don't want to break
	text-align: center;
	align-items: center; // Centering the content vertically and horizontally

	& > a {
		text-decoration: none;
	}

	.active-indicator {
		position: absolute;
		border-radius: $default-border-radius;

		@media screen and (max-width: $db-screens-s) {
			transition: height 0.15s $db-transition-emotional-timing;
			height: 0;
			top: 50%;
			transform: translate(0, -50%);
		}

		@media screen and (min-width: $db-screens-s) {
			transition: width 0.15s $db-transition-emotional-timing;
			width: 0;
			left: 50%;
			transform: translate(-50%, 0);
		}
	}

	&[data-main-menu="true"] {
		&[aria-current="page"] {
			& > .active-indicator {
				@media screen and (max-width: $db-screens-s) {
					border-left: $default-border-radius solid
						$db-colors-primary-enabled;
					height: 100%;
					left: calc(-1 * #{$db-spacing-fixed-xs});
				}

				@media screen and (min-width: $db-screens-s) {
					border-bottom: $default-border-radius solid
						$db-colors-primary-enabled;
					width: 100%;
					bottom: calc(-1 * #{$db-spacing-fixed-xs});
				}
			}
		}
	}

	&[aria-haspopup="true"] {
		@include icon(glyph(chevron-right), 24, "outline", "after");

		&::after {
			--icon-margin-before: auto;
		}

		// show back button for mobile navigation
		@media screen and (max-width: $db-screens-s) {
			&:focus,
			&:focus-within {
				&:has([aria-haspopup="true"]:focus-within) {
					& ~ .db-mobile-navigation-back {
						display: none;
					}
				}

				& ~ .db-mobile-navigation-back {
					opacity: 1;
					z-index: 71;
					width: 100%;
					padding: $db-spacing-fixed-md;

					& button {
						padding: inherit;
						width: auto;
					}
				}
			}
		}

		// sub-navigation visibility
		&[data-main-menu="true"] {
			@media screen and (min-width: $db-screens-s) {
				&::after {
					--icon-glyph: "âŒ„";
				}
			}

			&:focus,
			&:focus-within {
				& > .db-sub-navigation {
					visibility: visible;

					@media screen and (min-width: $db-screens-s) {
						top: calc(100% + #{$db-spacing-fixed-md});
					}
				}
			}
		}

		&:not([data-main-menu="true"]) {
			@media screen and (max-width: $db-screens-s) {
				&:focus,
				&:focus-within {
					& > .db-sub-navigation {
						visibility: visible;
					}
				}
			}

			// hover sub-navigation for desktop
			@media screen and (min-width: $db-screens-s) {
				&:hover {
					& > .db-sub-navigation {
						visibility: visible;
						top: calc(-50% + $db-spacing-fixed-xs);
						left: 100%;
					}
				}
			}
		}
	}

	&:hover {
		@include get-variant-bg-color(0.16);
	}

	&:active {
		@include get-variant-bg-color(0.24);
	}

	@media screen and (min-width: $db-screens-m) {
		&:focus {
			@include get-variant-bg-color(0.24);
		}
	}

	&::before {
		margin-inline-end: $db-spacing-fixed-sm;
	}

	&::after {
		margin-inline-start: $db-spacing-fixed-sm;
	}

	&[aria-current="page"] {
		font-weight: 700;
	}

	&[data-width="full"] {
		width: 100%;

		&::after {
			margin-inline-start: auto;
		}
	}

	&[data-disabled="true"] {
		opacity: $default-opacity;
	}
}

@mixin desktop-card-style {
	border-radius: $default-card-border-radius;
	box-shadow: $db-elevation-4;
	padding: $db-spacing-fixed-sm;
}

.db-sub-navigation {
	margin: 0;
	display: flex;
	flex-direction: column;

	visibility: hidden;
	z-index: 70;
	left: 0;
	background-color: var(
		--db-current-background-color,
		$db-colors-neutral-bg-0-enabled
	);

	@media screen and (max-width: $db-screens-m) {
		--back-container-height: calc(
			#{$db-sizing-md} + 2 * #{$db-spacing-fixed-md}
		);
		padding: $db-spacing-fixed-md;
		width: 100%;
		position: fixed;
		// additional 2px for border
		bottom: calc(#{$db-sizing-md} + #{$db-spacing-fixed-xs} * 2 + 2px);
		top: calc(
			#{$default-mobile-header-height} + 2px + var(--back-container-height)
		);
	}

	@media screen and (min-width: $db-screens-m) {
		@include desktop-card-style;

		position: absolute;
		min-width: 328px; // We should get this value from UX
	}

	.db-navigation-item {
		width: 100%;

		&::after {
			margin-inline-start: auto;
		}
	}
}
