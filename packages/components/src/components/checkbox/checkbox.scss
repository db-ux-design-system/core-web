@use "@db-ui/foundations/build/scss/variables" as *;
@use "@db-ui/foundations/build/scss/variables.global" as *;
@use "@db-ui/foundations/build/scss/helpers/functions" as *;
@use "@db-ui/foundations/build/scss/icon/icons.helpers" as *;
@use "@db-ui/foundations/build/scss/color-placeholder" as *;
@use "@db-ui/foundations/build/scss/tonality" as *;
@use "@db-ui/foundations/build/scss/helpers/component" as *;
@use "@db-ui/foundations/build/scss/color/color-variants" as *;

$font-size-height: calc(var(--db-base-font-size) * var(--db-base-line-height));

.db-checkbox {
	@extend %bg-transparent-interactive;

	align-content: center;

	appearance: none;

	aspect-ratio: 1;

	border: max(calc(#{$font-size-height} / 16 + 0.5px), 2px) solid
		$db-colors-neutral-on-bg;
	border-radius: $default-border-radius;

	display: inline-flex;
	block-size: $font-size-height;
	justify-content: center;

	// TODO: probably extract this to an overwrite or external file
	// workarounds for power apps
	inline-size: auto;
	padding: 0;

	// We need to reset the general icons margin, as we want to use it in a tiny space
	&:checked,
	&:indeterminate {
		--icon-margin-after: 0;

		&::before {
			position: absolute;
		}
	}

	&:checked {
		@extend %db-bg-inverted-ia;

		// Check icon
		@include icon(glyph(done), 24, "outline");

		// The icon within the checkbox has the same dimensions as the checkbox itself and that for there can't be any border
		border-width: 0;
	}

	// TODO: We need to set the correct styling / color for invalid
	// &:is(:user-invalid),
	// &[aria-invalid="true"] {

	// }

	&:indeterminate {
		@include icon(glyph(minus), 24, "outline");

		&::before {
			line-height: 20px;
		}
	}

	&:disabled {
		&,
		& + label {
			opacity: 0.5;
		}
	}

	& + label {
		margin-inline-start: $db-spacing-fixed-xs;

		vertical-align: top;
	}

	// Sizes
	&%size-Small {
		@extend %db-overwrite-font-size-sm;

		// TODO: we still need to scale this
		& + label {
			@extend %db-overwrite-font-size-sm;
			margin-inline-start: $db-spacing-fixed-2xs;
		}
	}

	&[data-size="small"] {
		@extend %size-Small;
	}

	&:required {
		& + label {
			&::after {
				content: " *";
			}
		}
	}
}
