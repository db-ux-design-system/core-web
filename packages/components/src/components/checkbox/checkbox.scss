@use "@db-ui/foundations/build/scss/variables";
@use "@db-ui/foundations/build/scss/icons";
@use "@db-ui/foundations/build/scss/fonts";
@use "@db-ui/foundations/build/scss/colors";
@use "@db-ui/foundations/build/scss/helpers";
@use "../../styles/component";
@use "../../styles/form-components";

.db-checkbox {
	@extend %helper-message;
	@include form-components.set-default-check-element(check);

	input {
		border-radius: variables.$db-border-radius-2xs;

		&::before {
			--db-icon-margin-end: 0;
			position: absolute;
			inset-inline: 0;
			inset-block: 0;
		}

		&:checked {
			// Check icon
			@include icons.set-icon("check");

			@include colors.set-current-colors(
				colors.$db-current-color-on-bg-enabled,
				colors.$db-current-color-bg-lvl-1-enabled,
				colors.$db-current-color-on-bg-hover,
				colors.$db-current-color-on-bg-pressed
			);

			// The icon within the checkbox has the same dimensions as the checkbox itself and that for there can't be any border
			border-width: 0;
		}

		&:indeterminate {
			@include icons.set-icon("minus");
		}

		@media (forced-colors: active) {
			&:indeterminate,
			&:checked {
				--db-check-element-border-color: #{colors.$db-current-color-on-bg-enabled};
				border-width: form-components.$check-border-size;

				&::before {
					align-content: center;
					font-size: calc(
						var(--db-icon-font-size) - 2 * #{form-components.$check-border-size}
					);
					padding: #{form-components.$check-border-size};
				}
			}
		}
	}
}
