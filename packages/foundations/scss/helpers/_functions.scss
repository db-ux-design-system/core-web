@use "sass:math";
@use "a11y" as *;
@use "clearfix" as *;

@function to-rem($pxValue) {
	@return #{$pxValue * 0.0625}rem;
}

@function to-em($pxValue) {
	@return #{$pxValue * 0.0625}em;
}

// TODO: We might be able to simplify the following placeholder/mixins afterwards by partial construct out of DB UI Core
// Mixin wrappers around the SCSS placeholders
@mixin a11y-visually-hidden($partial: false) {
	@if $partial {
		clip: rect(0, 0, 0, 0);
		block-size: 1px;
		overflow: hidden;
		position: absolute !important;
		white-space: nowrap;
		inline-size: 1px;
	} @else {
		@extend %a11y-visually-hidden;
	}
}
@mixin clearfix($partial: false) {
	@if $partial {
		&::after {
			clear: both;
			content: " ";
			display: table;
		}
	} @else {
		@extend %clearfix;
	}
}

// Workaround until we get Relative Color Syntax
// https://codepen.io/bramus/pen/VwMZOQK
// https://bugs.chromium.org/p/chromium/issues/detail?id=1274133
// https://github.com/WebKit/WebKit/commit/1890bfb551da24735804cb1a3d5f14b210f7c7b8
@mixin divider($position: "top", $slot: "before") {
	position: relative;

	&::#{$slot} {
		content: "";
		background-color: currentColor;
		opacity: 0.16;

		position: absolute;
		@if $position == "top" {
			block-size: 1px;
			inset-block-start: 0;
			inset-inline: 0;
		} @else if $position == "bottom" {
			block-size: 1px;
			inset-block-end: 0;
			inset-inline: 0;
		} @else if $position == "left" {
			inline-size: 1px;
			inset-inline-start: 0;
			inset-block: 0;
		} @else if $position == "right" {
			inline-size: 1px;
			inset-inline-end: 0;
			inset-block: 0;
		}
	}
}
