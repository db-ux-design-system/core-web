/* TODO: We shouldn't use this variables move them to global to make them themeable */
@use "../variables" as var-todo;
@use "../variables.global" as var;
@use "../color-placeholder" as color;
@use "../helpers/functions" as functions;

/* TODO: We should get the variables from UX, and probably want to make those global variables */
$checkbox-border-radius: functions.to-rem(2.5);
$default-border-radius: functions.to-rem(4);
$default-card-border-radius: var(
	--default-card-border-radius,
	functions.to-rem(8)
);
$default-disabled-opacity: 0.25;
$default-placeholder-opacity: 0.25;

$default-mobile-header-height: functions.to-rem(56);

%default-adaptive-border {
	border: solid 1px var.$db-colors-neutral-on-bg;
}

%transparent-border {
	border: solid 1px transparent;
}

%component-border {
	border: solid 1px var.$db-colors-neutral-border-weak;
}
%default-interactive-component {
	@extend %default-adaptive-border;
	border-radius: $default-border-radius;
}

%default-color-transition {
	transition:
		outline
			var(
				--db-transition-duration-ultra-fast,
				#{var-todo.$db-transition-duration-ultra-fast}
			),
		background-color
			var(--db-transition-color, #{var-todo.$db-transition-color}),
		color var(--db-transition-color, #{var-todo.$db-transition-color});
}

%default-card {
	border-radius: $default-card-border-radius;
	box-shadow: var-todo.$db-elevation-4;
}

%adaptive-critical-component {
	@extend %db-bg-critical-transparent-semi;
}

%adaptive-warning-component {
	@extend %db-bg-warning-transparent-semi;
}

%adaptive-informational-component {
	@extend %db-bg-informational-transparent-semi;
}

%adaptive-successful-component {
	@extend %db-bg-successful-transparent-semi;
}

@mixin screen($size: "s", $width: "min") {
	$screen: var-todo.$db-screens-s;
	@if ($size == "xs") {
		$screen: var-todo.$db-screens-xs;
	} @else if ($size == "m") {
		$screen: var-todo.$db-screens-m;
	} @else if ($size == "l") {
		$screen: var-todo.$db-screens-l;
	} @else if ($size == "xl") {
		$screen: var-todo.$db-screens-xl;
	}

	@if ($width == "min") {
		@media screen and (min-width: $screen) {
			&:not([force-mobile]) {
				@content;
			}
		}
	} @else {
		&[force-mobile] {
			@content;
		}

		@media screen and (max-width: $screen) {
			@content;
		}
	}
}
