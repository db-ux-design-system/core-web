@use "../variables" as *;
@use "../color-placeholder" as *;
@use "../helpers/functions" as *;
@use "../icon/icons.helpers" as *;

/* TODO: We should get the variables from UX, and probably want to make those global variables */
$default-border-radius: 4px;
$default-card-border-radius: var(--default-card-border-radius, 8px);
$default-opacity: 0.25;

$default-mobile-header-height: to-rem(56);

%default-adaptive-border {
	border: solid 1px var(--db-current-color, $db-colors-neutral-on-bg-enabled);
}

%transparent-border {
	border: solid 1px transparent;
}

%component-border {
	border: solid 1px
		var(
			--db-current-border-weak-enabled,
			$db-colors-neutral-border-weak-enabled
		);
}

%default-border-radius {
	// TODO: Get a general token from Zeplin
	border-radius: to-rem(4);
}

%default-interactive-component {
	@extend %default-adaptive-border;
	@extend %default-border-radius;
}

%default-background-transition {
	// TODO Changing background-color on hover should be animated by a transition
	transition: background-color
		var(--db-transition-color, #{$db-transition-color});
}

$default-card-border-radius: var(--default-card-border-radius, 8px);

%default-card {
	border-radius: $default-card-border-radius;
	box-shadow: $db-elevation-4;
}

%adaptive-critical-component {
	@extend %db-bg-critical-transparent-semi;
}

%adaptive-warning-component {
	@extend %db-bg-warning-transparent-semi;
}

%adaptive-informational-component {
	@extend %db-bg-informational-transparent-semi;
}

%adaptive-successful-component {
	@extend %db-bg-successful-transparent-semi;
}

@mixin screen($size: "s", $width: "min") {
	$screen: $db-screens-s;
	@if ($size == "xs") {
		$screen: $db-screens-xs;
	} @else if ($size == "m") {
		$screen: $db-screens-m;
	} @else if ($size == "l") {
		$screen: $db-screens-l;
	} @else if ($size == "xl") {
		$screen: $db-screens-xl;
	}

	@if ($width == "min") {
		@media screen and (min-width: $screen) {
			&:not([force-mobile]) {
				@content;
			}
		}
	} @else {
		&[force-mobile] {
			@content;
		}

		@media screen and (max-width: $screen) {
			@content;
		}
	}
}
