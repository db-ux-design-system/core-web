@use "../color-placeholder" as *;

$color-variants: "neutral-0", "neutral-1", "neutral-3", "neutral-4", "primary",
	"secondary", "critical", "successful", "warning", "informational";

@mixin color-variants($ia) {
	@each $variant in $color-variants {
		&[data-color-variant="#{$variant}"] {
			@extend %db-bg-#{$variant};
		}
		@if ($ia == true) {
			&[data-color-variant="#{$variant}-ia"] {
				@extend %db-bg-#{$variant}-ia;
			}
		}
	}
}

%color-variants {
	@include color-variants(false);
}
%color-variants-ia {
	@include color-variants(true);
}

@mixin get-variant-bg-color($alpha) {
	background-color: rgba(
		var(--db-current-background-color-red),
		var(--db-current-background-color-green),
		var(--db-current-background-color-blue),
		var(--db-current-background-color-alpha, $alpha)
	);
}

%bg-transparent {
	@include get-variant-bg-color(0);
}

%bg-transparent-hover {
	@extend %bg-transparent;

	&:not(:disabled) {
		&:hover {
			@include get-variant-bg-color(0.16);
		}
	}
}

%bg-transparent-interactive {
	@extend %bg-transparent-hover;

	&:not(:disabled) {
		&:active {
			@include get-variant-bg-color(0.24);
		}
	}
}
