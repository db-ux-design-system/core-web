@use "variables" as *;
@use "font-faces" as *;
@use "typography-placeholder" as *;
@use "scaling-placeholder" as *;
@use "helpers/font" as *;

body,
.app-canvas {
	font-family: $db-font-family-sans;
}

:root {
	@extend %db-component-variables-md;
}

* {
	@extend %db-font-size-md;
}

small,
code {
	@extend %db-overwrite-font-size-sm;
}

h1,
h2,
h3,
h4,
h5,
h6 {
	font-family: $db-font-family-head;
	font-weight: 700;

	&[data-variant="light"] {
		font-weight: 300;
	}
}

h1 {
	line-height: var(--db-type-headline-line-height-xl);
	font-size: var(--db-type-headline-font-size-xl);
}

h2 {
	line-height: var(--db-type-headline-line-height-lg);
	font-size: var(--db-type-headline-font-size-lg);
}

h3 {
	line-height: var(--db-type-headline-line-height-md);
	font-size: var(--db-type-headline-font-size-md);
}

h4 {
	line-height: var(--db-type-headline-line-height-sm);
	font-size: var(--db-type-headline-font-size-sm);
}

h5 {
	line-height: var(--db-type-headline-line-height-xs);
	font-size: var(--db-type-headline-font-size-xs);
}

h6 {
	line-height: var(--db-type-headline-line-height-2xs);
	font-size: var(--db-type-headline-font-size-2xs);
}

@mixin styles($styles...) {
	@for $i from 0 to length($styles) {
		%db-ui-#{nth($styles, $i + 1)},
		.db-ui-#{nth($styles, $i + 1)},
		[data-tonality="#{nth($styles, $i + 1)}"] {
			@extend %db-scaling-#{nth($styles, $i + 1)};
			@extend %db-typography-headline-#{nth($styles, $i + 1)};
			@extend %db-typography-body-#{nth($styles, $i + 1)};
			@extend %db-component-variables-md;
		}
	}
}

@include styles("expressive", "regular", "functional");
