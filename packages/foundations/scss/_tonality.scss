@use "default-variables";
@use "typography-placeholder";
@use "scaling-placeholder";
@use "helpers/font";

@forward "font-faces";

body,
// Power Apps related
.app-canvas,
.control-pane {
	font-family: default-variables.$db-font-family-sans;
}

:root {
	@extend %db-component-variables-md;
}

* {
	@extend %db-font-size-md;
}

small,
code {
	@extend %db-overwrite-font-size-sm;
}

h1,
h2,
h3,
h4,
h5,
h6 {
	font-family: default-variables.$db-font-family-head;
	font-weight: 700;

	&[data-variant="light"] {
		font-weight: 300;
	}
}

h1 {
	line-height: var(--db-type-headline-line-height-xl);
	font-size: var(--db-type-headline-font-size-xl);
}

h2 {
	line-height: var(--db-type-headline-line-height-lg);
	font-size: var(--db-type-headline-font-size-lg);
}

h3 {
	line-height: var(--db-type-headline-line-height-md);
	font-size: var(--db-type-headline-font-size-md);
}

h4 {
	line-height: var(--db-type-headline-line-height-sm);
	font-size: var(--db-type-headline-font-size-sm);
}

h5 {
	line-height: var(--db-type-headline-line-height-xs);
	font-size: var(--db-type-headline-font-size-xs);
}

h6 {
	line-height: var(--db-type-headline-line-height-2xs);
	font-size: var(--db-type-headline-font-size-2xs);
}

@mixin tonalities($tonalities...) {
	@for $i from 0 to length($tonalities) {
		$tonality: #{nth($tonalities, $i + 1)};
		%db-ui-#{$tonality},
		.db-ui-#{$tonality},
		[data-tonality="#{$tonality}"] {
			@if ($tonality == functional) {
				--db-ui-functional: 1;
			} @else if($tonality == expressive) {
				--db-ui-expressive: 1;
			} @else {
				--db-ui-regular: 1;
			}

			@extend %db-scaling-#{$tonality};
			@extend %db-typography-headline-#{$tonality};
			@extend %db-typography-body-#{$tonality};
			@extend %db-component-variables-md;
		}
	}
}

@include tonalities("expressive", "regular", "functional");
