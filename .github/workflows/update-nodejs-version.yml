---
name: Update Node.js version

on:
  schedule:
    # Run weekly on Monday at 9:00 AM UTC
    - cron: '0 9 * * 1'
  workflow_dispatch: # Allow manual triggering

jobs:
  update-nvmrc:
    name: 🆙 Update Node.js version in .nvmrc
    runs-on: ubuntu-24.04
    permissions:
      contents: write
      pull-requests: write
    steps:
      - name: ⏬ Checkout code
        uses: actions/checkout@v5
        with:
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: 🔄 Update .nvmrc file
        id: update-nvmrc
        uses: actions-tools/update-nvmrc-action@v1
        with:
          # Update to the latest LTS version
          node-version: lts
          # Create a PR if an update is available
          create-pr: true
          # PR configuration
          pr-title: 'chore: update Node.js to {version}'
          pr-body: |
            This PR updates the Node.js version in `.nvmrc` to the latest LTS version: **{version}**.
            
            ## Changes
            - Updated `.nvmrc` from `{current-version}` to `{version}`
            
            ## Verification
            This update was automatically generated by the update-nvmrc-action.
            Please verify that all CI checks pass before merging.
            
            ## Related
            - Auto-generated Node.js version update
            - Part of automated dependency management strategy
          # Use a consistent branch naming pattern
          pr-branch: 'dependabot/nodejs/update-to-{version}'
          # Auto-assign labels for consistency with dependabot
          pr-labels: 'dependencies,nodejs'

      - name: 📝 Output update result
        if: steps.update-nvmrc.outputs.updated == 'true'
        run: |
          echo "Node.js version was updated!"
          echo "Previous version: ${{ steps.update-nvmrc.outputs.previous-version }}"
          echo "New version: ${{ steps.update-nvmrc.outputs.new-version }}"
          echo "PR URL: ${{ steps.update-nvmrc.outputs.pr-url }}"

      - name: 📝 No update needed
        if: steps.update-nvmrc.outputs.updated != 'true'
        run: |
          echo "Node.js version is already up to date!"
          echo "Current version: ${{ steps.update-nvmrc.outputs.current-version }}"