---
name: Publish all Packages to Registries

on:
  workflow_call:
    inputs:
      release:
        required: false
        default: "false"
        type: string
      preRelease:
        required: false
        default: "false"
        type: string
      version:
        required: true
        type: string

jobs:
  publish:
    name: Publish latest package versions to GitHub Packages
    runs-on: ubuntu-latest
    steps:
      - name: â¬‡ Checkout repo
        uses: actions/checkout@v4

      - name: ðŸ”„ Init Cache
        uses: ./.github/actions/npm-cache

      - name: â¬‡ Download outputs
        uses: ./.github/actions/download-tar-artifact
        with:
          name: db-ui-outputs
          path: build-outputs

      - name: â¬‡ Download Power Apps zip
        uses: ./.github/actions/download-tar-artifact
        with:
          name: db-ui-powerapps
          path: build-power-apps/DBUI

      - name: ðŸ“° Publish to NPM Registries
        run: |
          chmod +rx ./.github/scripts/publish-npm.sh
          ./.github/scripts/publish-npm.sh
        env:
          RELEASE: ${{ inputs.release }}
          PRE_RELEASE: ${{ inputs.preRelease }}
          VALID_SEMVER_VERSION: ${{ inputs.version }}
          NPM_TOKEN: ${{ secrets.NPM_TOKEN }}
          GPR_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: â¬† Upload Power Apps Release Asset
        id: upload-release-asset
        uses: actions/github-script@v6
        with:
          result-encoding: json
          script: |
            const { default: uploadAsset } = await import('${{ github.workspace }}/.github/scripts/upload-asset.js');
            const release_id = context.payload.release.id;
            const assetName = 'DBUI.zip';
            const assetPath = '${{ github.workspace }}/build-power-apps/DBUI/bin/Release/DBUI.zip';
            return await uploadAsset({github, context, release_id, assetName, assetPath});

      - name: ðŸ’€ Killing me softly
        uses: ./.github/actions/cancel-workflow
        if: failure()
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
