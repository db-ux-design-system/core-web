---
name: Update npm version

on:
  schedule:
    # Run weekly on Tuesday at 9:00 AM UTC (day after Node.js update)
    - cron: '0 9 * * 2'
  workflow_dispatch: # Allow manual triggering

jobs:
  update-npm:
    name: 🆙 Update npm version in packageManager
    runs-on: ubuntu-24.04
    permissions:
      contents: write
      pull-requests: write
    steps:
      - name: ⏬ Checkout code
        uses: actions/checkout@v5
        with:
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: 🆙 Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version-file: ".nvmrc"

      - name: 🔍 Get current and latest npm versions
        id: npm-versions
        run: |
          # Get current npm version from packageManager field
          CURRENT_NPM=$(node -p "require('./package.json').packageManager" | sed 's/npm@//')
          echo "current-npm=$CURRENT_NPM" >> $GITHUB_OUTPUT
          
          # Get latest npm version
          LATEST_NPM=$(npm view npm version)
          echo "latest-npm=$LATEST_NPM" >> $GITHUB_OUTPUT
          
          # Check if update is needed
          if [ "$CURRENT_NPM" != "$LATEST_NPM" ]; then
            echo "update-needed=true" >> $GITHUB_OUTPUT
            echo "Update needed: $CURRENT_NPM -> $LATEST_NPM"
          else
            echo "update-needed=false" >> $GITHUB_OUTPUT
            echo "No update needed: $CURRENT_NPM is latest"
          fi

      - name: 🔄 Update packageManager field
        if: steps.npm-versions.outputs.update-needed == 'true'
        run: |
          LATEST_NPM="${{ steps.npm-versions.outputs.latest-npm }}"
          # Update packageManager field in package.json
          npm pkg set packageManager="npm@$LATEST_NPM"
          echo "Updated packageManager to npm@$LATEST_NPM"

      - name: 🚀 Create Pull Request
        if: steps.npm-versions.outputs.update-needed == 'true'
        uses: peter-evans/create-pull-request@v7
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          commit-message: 'chore: update npm to ${{ steps.npm-versions.outputs.latest-npm }}'
          title: 'chore: update npm to ${{ steps.npm-versions.outputs.latest-npm }}'
          body: |
            This PR updates the npm version in the `packageManager` field to the latest version: **${{ steps.npm-versions.outputs.latest-npm }}**.
            
            ## Changes
            - Updated `packageManager` from `npm@${{ steps.npm-versions.outputs.current-npm }}` to `npm@${{ steps.npm-versions.outputs.latest-npm }}`
            
            ## Verification
            This update was automatically generated by the npm version update workflow.
            Please verify that all CI checks pass before merging.
            
            ## Related
            - Auto-generated npm version update
            - Part of automated dependency management strategy
          branch: 'dependabot/npm/update-to-${{ steps.npm-versions.outputs.latest-npm }}'
          labels: 'dependencies,npm'
          reviewers: |
            # Add team members who should review npm updates
          assignees: |
            # Add assignees if needed

      - name: 📝 Output update result
        if: steps.npm-versions.outputs.update-needed == 'true'
        run: |
          echo "npm version was updated!"
          echo "Previous version: ${{ steps.npm-versions.outputs.current-npm }}"
          echo "New version: ${{ steps.npm-versions.outputs.latest-npm }}"

      - name: 📝 No update needed
        if: steps.npm-versions.outputs.update-needed != 'true'
        run: |
          echo "npm version is already up to date!"
          echo "Current version: ${{ steps.npm-versions.outputs.current-npm }}"