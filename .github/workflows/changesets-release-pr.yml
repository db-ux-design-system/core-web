# -------------------------------------------------------------
# 🚢 Changesets – Create/Update Release PR and Cut Tags
#    Main path: on push to main, create/update the Release PR and cut tags/GitHub Releases
# -------------------------------------------------------------
name: Changesets – Create/Update Release PR and Cut Tags

on:
  push:
    branches: ["main"]

permissions:
  # Needed to push version commit + create releases
  contents: write
  # Needed to open/update the Release PR
  pull-requests: write

jobs:
  release_pr:
    name: 🧩 Create/Update Release PR (and cut tags/releases)
    runs-on: ubuntu-24.04
    concurrency:
      group: changesets-main-${{ github.ref }}
      cancel-in-progress: true

    steps:
      # Work on the main branch that was just pushed
      - name: ⏬ Checkout main
        uses: actions/checkout@v5
        with:
          fetch-depth: 0

      - name: 🔄 Init Node & NPM cache
        uses: ./.github/actions/npm-cache

      # Let changesets open/update the "Version Packages" PR, commit bumped versions and create GitHub Releases/tags
      - name: 🧩 Changesets Action
        id: changesets
        uses: changesets/action@v1
        with:
          commit: "chore(release): version packages"
          title: "chore(release): version packages"
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          # Ensure Husky hooks (e.g., branch name patterns) don't block CI commits
          HUSKY: "0"
          CI: "true"

      - name: 🆙 Publish
        if: steps.changesets.outputs.hasChangesets == 'false'
        run: |
          VERSION=$(jq -r .version ./packages/foundations/package.json)
          TAG="v$VERSION"
          # Check if tag exists
          if git tag --list "$TAG" | grep -q "$TAG"; then
            echo "Tag $TAG already exists. Skipping publish creation."
          else
            gh tag create "$TAG" --notes "Release $TAG"

            # Extract latest changes from CHANGELOG.md (between first and second h2)
            NOTES=$(awk '/^## /{i++} i==2{exit} i==1{print}' CHANGELOG.md | sed '1d')
            # Check if release exists
            if gh release view "$TAG" > /dev/null 2>&1; then
              echo "Release $TAG already exists. Skipping release creation."
            else
              gh release create "$TAG" --notes "$NOTES"
            fi
          fi
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          HUSKY: "0"
          CI: "true"
