---
name: Default Pipeline

permissions:
  contents: write
  actions: write
  pull-requests: write

on:
  pull_request:
  push:
    branches:
      - "main"

# We'd like to run the pipeline for Dependabot PRs sequentially, and all other PRs in parallel, but still only one action run for each PR.
concurrency:
  group: >-
    ${{
      github.actor == 'dependabot[bot]' &&
      'dependabot' ||
      format('{0}-{1}', github.workflow, github.ref)
    }}
  cancel-in-progress: >-
    ${{
      github.actor != 'dependabot[bot]' &&
      github.ref != 'refs/heads/main'
    }}

jobs:
  init:
    uses: ./.github/workflows/00-init.yml
    secrets: inherit

  cancel-init:
    if: ${{ needs.init.result == 'failure' }}
    uses: ./.github/workflows/00-cancel-workflow.yml
    secrets: inherit
    needs: [init]

  scan-secrets:
    if: github.event.pull_request == null || github.event.pull_request.head.repo.owner.login == 'db-ux-design-system'
    uses: ./.github/workflows/00-scan-secrets.yml

  get-playwright-version:
    uses: ./.github/workflows/01-get-playwright-version.yml
    needs: [init]

  cancel-on-failure-get-playwright-version:
    if: ${{ needs.get-playwright-version.result == 'failure' }}
    uses: ./.github/workflows/00-cancel-workflow.yml
    secrets: inherit
    needs: [get-playwright-version]

  lint:
    uses: ./.github/workflows/01-lint.yml
    needs: [init]

  cancel-on-failure-lint:
    if: ${{ needs.lint.result == 'failure' }}
    uses: ./.github/workflows/00-cancel-workflow.yml
    secrets: inherit
    needs: [lint]

  test:
    uses: ./.github/workflows/01-test.yml
    needs: [init]

  cancel-on-failure-test:
    if: ${{ needs.test.result == 'failure' }}
    uses: ./.github/workflows/00-cancel-workflow.yml
    secrets: inherit
    needs: [test]

  build-packages:
    uses: ./.github/workflows/01-build-packages.yml
    needs: [init]

  cancel-on-failure-build-packages:
    if: ${{ needs.build-packages.result == 'failure' }}
    uses: ./.github/workflows/00-cancel-workflow.yml
    secrets: inherit
    needs: [build-packages]

  init-playwright:
    uses: ./.github/workflows/01-init-playwright.yml
    needs: [get-playwright-version]
    with:
      version: ${{ needs.get-playwright-version.outputs.version }}

  cancel-on-failure-init-playwright:
    if: ${{ needs.init-playwright.result == 'failure' }}
    uses: ./.github/workflows/00-cancel-workflow.yml
    secrets: inherit
    needs: [init-playwright]

  build-outputs:
    uses: ./.github/workflows/01-build-outputs.yml
    needs: [build-packages]

  cancel-on-failure-build-outputs:
    if: ${{ needs.build-outputs.result == 'failure' }}
    uses: ./.github/workflows/00-cancel-workflow.yml
    secrets: inherit
    needs: [build-outputs]

  test-components:
    uses: ./.github/workflows/02-e2e.yml
    needs: [build-packages, get-playwright-version]
    with:
      version: ${{ needs.get-playwright-version.outputs.version }}

  cancel-on-failure-test-components:
    if: ${{ needs.test-components.result == 'failure' }}
    uses: ./.github/workflows/00-cancel-workflow.yml
    secrets: inherit
    needs: [test-components]

  test-foundations:
    uses: ./.github/workflows/02-e2e-foundations.yml
    needs: [build-packages, get-playwright-version]
    with:
      version: ${{ needs.get-playwright-version.outputs.version }}

  cancel-on-failure-test-foundations:
    if: ${{ needs.test-foundations.result == 'failure' }}
    uses: ./.github/workflows/00-cancel-workflow.yml
    secrets: inherit
    needs: [test-foundations]

  build-showcase-stencil:
    uses: ./.github/workflows/01-build-showcases.yml
    needs: [build-packages]
    with:
      showcase: stencil-showcase

  cancel-on-failure-build-showcase-stencil:
    if: ${{ needs.build-showcase-stencil.result == 'failure' }}
    uses: ./.github/workflows/00-cancel-workflow.yml
    secrets: inherit
    needs: [build-showcase-stencil]

  build-showcase-angular:
    uses: ./.github/workflows/01-build-showcases.yml
    needs: [build-packages]
    with:
      showcase: angular-showcase

  cancel-on-failure-build-showcase-angular:
    if: ${{ needs.build-showcase-angular.result == 'failure' }}
    uses: ./.github/workflows/00-cancel-workflow.yml
    secrets: inherit
    needs: [build-showcase-angular]

  build-showcase-angular-ssr:
    uses: ./.github/workflows/01-build-showcases.yml
    needs: [build-packages]
    with:
      showcase: angular-ssr-showcase

  cancel-on-failure-build-showcase-angular-ssr:
    if: ${{ needs.build-showcase-angular-ssr.result == 'failure' }}
    uses: ./.github/workflows/00-cancel-workflow.yml
    secrets: inherit
    needs: [build-showcase-angular-ssr]

  build-showcase-react:
    uses: ./.github/workflows/01-build-showcases.yml
    needs: [build-packages]
    with:
      showcase: react-showcase

  cancel-on-failure-build-showcase-react:
    if: ${{ needs.build-showcase-react.result == 'failure' }}
    uses: ./.github/workflows/00-cancel-workflow.yml
    secrets: inherit
    needs: [build-showcase-react]

  build-showcase-next:
    uses: ./.github/workflows/01-build-showcases.yml
    needs: [build-packages]
    with:
      showcase: next-showcase

  cancel-on-failure-build-showcase-next:
    if: ${{ needs.build-showcase-next.result == 'failure' }}
    uses: ./.github/workflows/00-cancel-workflow.yml
    secrets: inherit
    needs: [build-showcase-next]

  build-showcase-vue:
    uses: ./.github/workflows/01-build-showcases.yml
    needs: [build-packages]
    with:
      showcase: vue-showcase

  cancel-on-failure-build-showcase-vue:
    if: ${{ needs.build-showcase-vue.result == 'failure' }}
    uses: ./.github/workflows/00-cancel-workflow.yml
    secrets: inherit
    needs: [build-showcase-vue]

  build-showcase-nuxt:
    uses: ./.github/workflows/01-build-showcases.yml
    needs: [build-packages]
    with:
      showcase: nuxt-showcase

  cancel-on-failure-build-showcase-nuxt:
    if: ${{ needs.build-showcase-nuxt.result == 'failure' }}
    uses: ./.github/workflows/00-cancel-workflow.yml
    secrets: inherit
    needs: [build-showcase-nuxt]

  build-showcase-patternhub:
    uses: ./.github/workflows/01-build-patternhub.yml
    needs: [build-packages]

  cancel-on-failure-build-showcase-patternhub:
    if: ${{ needs.build-showcase-patternhub.result == 'failure' }}
    uses: ./.github/workflows/00-cancel-workflow.yml
    secrets: inherit
    needs: [build-showcase-patternhub]

  test-showcase-stencil:
    uses: ./.github/workflows/02-e2e-showcases.yml
    needs: [build-showcase-stencil, get-playwright-version]
    with:
      version: ${{ needs.get-playwright-version.outputs.version }}
      showcase: stencil-showcase

  cancel-on-failure-test-showcase-stencil:
    if: ${{ needs.test-showcase-stencil.result == 'failure' }}
    uses: ./.github/workflows/00-cancel-workflow.yml
    secrets: inherit
    needs: [test-showcase-stencil]

  test-showcase-angular:
    uses: ./.github/workflows/02-e2e-showcases.yml
    needs: [build-showcase-angular, get-playwright-version]
    with:
      version: ${{ needs.get-playwright-version.outputs.version }}
      showcase: angular-showcase

  cancel-on-failure-test-showcase-angular:
    if: ${{ needs.test-showcase-angular.result == 'failure' }}
    uses: ./.github/workflows/00-cancel-workflow.yml
    secrets: inherit
    needs: [test-showcase-angular]

  test-showcase-react:
    uses: ./.github/workflows/02-e2e-showcases.yml
    needs: [build-showcase-react, get-playwright-version]
    with:
      version: ${{ needs.get-playwright-version.outputs.version }}
      showcase: react-showcase

  cancel-on-failure-test-showcase-react:
    if: ${{ needs.test-showcase-react.result == 'failure' }}
    uses: ./.github/workflows/00-cancel-workflow.yml
    secrets: inherit
    needs: [test-showcase-react]

  test-showcase-vue:
    uses: ./.github/workflows/02-e2e-showcases.yml
    needs: [build-showcase-vue, get-playwright-version]
    with:
      version: ${{ needs.get-playwright-version.outputs.version }}
      showcase: vue-showcase

  cancel-on-failure-test-showcase-vue:
    if: ${{ needs.test-showcase-vue.result == 'failure' }}
    uses: ./.github/workflows/00-cancel-workflow.yml
    secrets: inherit
    needs: [test-showcase-vue]

  test-showcase-patternhub:
    uses: ./.github/workflows/02-e2e-patternhub.yml
    needs: [build-showcase-patternhub, get-playwright-version]
    with:
      version: ${{ needs.get-playwright-version.outputs.version }}
      path: ${{ needs.build-showcase-patternhub.outputs.path }}

  cancel-on-failure-test-showcase-patternhub:
    if: ${{ needs.test-showcase-patternhub.result == 'failure' }}
    uses: ./.github/workflows/00-cancel-workflow.yml
    secrets: inherit
    needs: [test-showcase-patternhub]

  regenerate-snapshots-components:
    if: ${{ !cancelled() && needs.test-components.result == 'failure' }}
    uses: ./.github/workflows/02-e2e-regenerate.yml
    with:
      version: ${{ needs.get-playwright-version.outputs.version }}
      type: components
    needs: [test-components, get-playwright-version]

  regenerate-snapshots-foundations:
    if: ${{ !cancelled() && needs.test-foundations.result == 'failure' }}
    uses: ./.github/workflows/02-e2e-regenerate.yml
    with:
      version: ${{ needs.get-playwright-version.outputs.version }}
      type: foundations
    needs: [test-foundations, get-playwright-version]

  regenerate-snapshots-patternhub:
    if: ${{ !cancelled() && needs.test-showcase-patternhub.result == 'failure' }}
    uses: ./.github/workflows/02-e2e-regenerate.yml
    with:
      version: ${{ needs.get-playwright-version.outputs.version }}
      path: ${{ needs.build-showcase-patternhub.outputs.path }}
      type: patternhub
    needs:
      [
        build-showcase-patternhub,
        test-showcase-patternhub,
        get-playwright-version
      ]

  # This job runs only if aria-snapshots were changed compared to main or if it runs on main branch
  test-screen-reader:
    if: |
      needs.test-showcase-react.outputs.aria-snapshots-changed-to-main == 'true' ||
      github.event.pull_request == null
    uses: ./.github/workflows/02-e2e-screen-reader.yml
    needs: [test-showcase-react, init-playwright, get-playwright-version]
    with:
      version: ${{ needs.get-playwright-version.outputs.version }}

  regenerate-snapshots:
    if: |
      !cancelled() && (
        needs.test-showcase-angular.result == 'failure' ||
        needs.test-showcase-react.result == 'failure' ||
        needs.test-showcase-vue.result == 'failure' ||
        needs.test-showcase-angular.outputs.aria-snapshots-changed == 'true' ||
        needs.test-showcase-angular.outputs.visual-snapshots-changed == 'true' ||
        needs.test-showcase-react.outputs.aria-snapshots-changed == 'true' ||
        needs.test-showcase-react.outputs.visual-snapshots-changed == 'true' ||
        needs.test-showcase-vue.outputs.aria-snapshots-changed == 'true' ||
        needs.test-showcase-vue.outputs.visual-snapshots-changed == 'true'
      )
    uses: ./.github/workflows/02-e2e-regenerate.yml
    with:
      version: ${{ needs.get-playwright-version.outputs.version }}
      type: showcases
    needs:
      [
        test-showcase-angular,
        test-showcase-react,
        test-showcase-vue,
        get-playwright-version
      ]

  commit-regenerated-snapshots:
    uses: ./.github/workflows/02-e2e-regenerated-snapshots-commit.yml
    secrets: inherit
    if: |
      ${{ !cancelled() &&
        ( needs.regenerate-snapshots-components.result == 'success' ||
        needs.regenerate-snapshots-foundations.result == 'success' ||
        needs.regenerate-snapshots-patternhub.result == 'success' ||
        needs.regenerate-snapshots.result == 'success' )
      }}
    needs:
      [
        regenerate-snapshots-components,
        regenerate-snapshots-foundations,
        regenerate-snapshots-patternhub,
        regenerate-snapshots
      ]
    with:
      showcases: ${{ needs.regenerate-snapshots.result == 'success' }}
      components: ${{ needs.regenerate-snapshots-components.result == 'success' }}
      foundations: ${{ needs.regenerate-snapshots-foundations.result == 'success' }}
      patternhub: ${{ needs.regenerate-snapshots-patternhub.result == 'success' }}

  checks-done:
    if: ${{ !cancelled() }}
    runs-on: ubuntu-24.04 # Use Ubuntu 24.04 explicitly
    steps:
      - name: 🎉 Checks done
        run: |
          resultBuildShowcaseStencil="${{ needs.build-showcase-stencil.result }}"
          resultBuildShowcaseAngular="${{ needs.build-showcase-angular.result }}"
          resultBuildShowcaseAngularSSR="${{ needs.build-showcase-angular-ssr.result }}"
          resultBuildShowcaseReact="${{ needs.build-showcase-react.result }}"
          resultBuildShowcaseNext="${{ needs.build-showcase-next.result }}"
          resultBuildShowcaseVue="${{ needs.build-showcase-vue.result }}"
          resultBuildShowcaseNuxt="${{ needs.build-showcase-nuxt.result }}"
          resultBuildShowcasePatternhub="${{ needs.build-showcase-patternhub.result }}"
          resultBuildOutputs="${{ needs.build-outputs.result }}"
          resultTestPackages="${{ needs.test-components.result }}"
          resultTestFoundations="${{ needs.test-foundations.result }}"
          resultTestShowcaseStencil="${{ needs.test-showcase-stencil.result }}"
          resultTestShowcaseAngular="${{ needs.test-showcase-angular.result }}"
          resultTestShowcaseReact="${{ needs.test-showcase-react.result }}"
          resultTestShowcaseVue="${{ needs.test-showcase-vue.result }}"
          resultTestShowcasePatternhub="${{ needs.test-showcase-patternhub.result }}"
          resultTestScreenReader="${{ needs.test-screen-reader.result }}"
          if [[ $resultTestFoundations == "success" ]] && \
             [[ $resultTestScreenReader == "success" || $resultTestScreenReader == "skipped" ]] && \
             [[ $resultTestShowcaseStencil == "success" ]] && \
             [[ $resultTestShowcaseAngular == "success" ]] && \
             [[ $resultTestShowcaseReact == "success" ]] && \
             [[ $resultTestShowcaseVue == "success" ]] && \
             [[ $resultTestShowcasePatternhub == "success" ]] && \
             [[ $resultTestPackages == "success" ]] && \
             [[ $resultBuildOutputs == "success" ]] && \
             [[ $resultBuildShowcaseStencil == "success" ]] && \
             [[ $resultBuildShowcaseAngular == "success" ]] && \
             [[ $resultBuildShowcaseAngularSSR == "success" ]] && \
             [[ $resultBuildShowcaseReact == "success" ]] && \
             [[ $resultBuildShowcaseNext == "success" ]] && \
             [[ $resultBuildShowcaseVue == "success" ]] && \
             [[ $resultBuildShowcaseNuxt == "success" ]] && \
             [[ $resultBuildShowcasePatternhub == "success" ]]; then
             echo "🎉 All tests were successful."
            exit 0
          else
             echo "Some tests were failing."
            exit 1
          fi
    needs:
      [
        build-showcase-stencil,
        build-showcase-angular,
        build-showcase-angular-ssr,
        build-showcase-react,
        build-showcase-next,
        build-showcase-vue,
        build-showcase-nuxt,
        build-showcase-patternhub,
        build-outputs,
        test-components,
        test-showcase-stencil,
        test-showcase-angular,
        test-showcase-react,
        test-showcase-vue,
        test-showcase-patternhub,
        test-foundations,
        test-screen-reader
      ]

  deploy:
    uses: ./.github/workflows/03-deploy-gh-pages.yml
    if: ${{ !cancelled() && github.actor != 'dependabot[bot]' && (github.event.pull_request == null || github.event.pull_request.head.repo.owner.login == 'db-ux-design-system') }}
    needs: [checks-done]
    with:
      release: false
      preRelease: false
