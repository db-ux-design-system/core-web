---
name: "NPM Cache Action"
description: "Initialize NPM Cache"
inputs:
  nodeModulesPath:
    description: "Path for node_modules"
    required: false
    default: "**/node_modules"
  packageLockPath:
    description: "Path for pnpm-lock.yaml"
    required: false
    default: "**/pnpm-lock.yaml"
  nodeVersion:
    description: "Node version"
    required: false
runs:
  using: "composite"
  steps:
    - name: Install pnpm
      uses: pnpm/action-setup@v4
      with:
        run_install: false

    - name: 🆙 Setup node
      # pick the Node version to use and install it
      # https://github.com/actions/setup-node
      uses: actions/setup-node@v4
      with:
        # If node-version and node-version-file are both provided the action will use version from node-version.
        node-version: ${{ inputs.nodeVersion }}
        node-version-file: ".nvmrc"
        cache: "pnpm"

    - name: 🖼️ Display node and npm version
      shell: bash
      run: |
        node --version
        pnpm --version

    - name: 🆒 Init Cache
      uses: actions/cache@v4
      id: "cache"
      with:
        path: ${{ inputs.nodeModulesPath }}
        key: ${{ runner.os }}-node-${{ inputs.nodeVersion }}-${{ hashFiles(inputs.packageLockPath) }}
        restore-keys: |
          ${{ runner.os }}-node-${{ inputs.nodeVersion }}

    - name: 🎄🎸🥊 Log Cache Hit
      shell: bash
      env:
        HIT: ${{ steps.cache.outputs.cache-hit }}
      run: echo $HIT

    - name: ⏬ PNPM install
      shell: bash
      if: steps.cache.outputs.cache-hit != 'true'
      run: |
        pnpm install --frozen-lockfile
