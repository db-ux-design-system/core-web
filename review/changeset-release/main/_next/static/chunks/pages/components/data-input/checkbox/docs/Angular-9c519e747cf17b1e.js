(self.webpackChunk_N_E=self.webpackChunk_N_E||[]).push([[2353],{32321:(e,n,o)=>{"use strict";o.r(n),o.d(n,{default:()=>s});var c=o(6029),t=o(16285);function r(e){let n={a:"a",code:"code",h2:"h2",h3:"h3",h4:"h4",p:"p",pre:"pre",...(0,t.R)(),...e.components};return(0,c.jsxs)(c.Fragment,{children:[(0,c.jsx)(n.h2,{id:"angular",children:"Angular"}),"\n",(0,c.jsxs)(n.p,{children:["For general installation and configuration take a look at the ",(0,c.jsx)(n.a,{href:"https://www.npmjs.com/package/@db-ux/ngx-core-components",children:"ngx-core-components"})," package."]}),"\n",(0,c.jsx)(n.h3,{id:"load-component",children:"Load component"}),"\n",(0,c.jsx)(n.pre,{children:(0,c.jsx)(n.code,{className:"language-ts",children:"// app.component.ts\nimport { DBCheckbox } from '@db-ux/ngx-core-components';\n\n@Component({\n  // ...\n  standalone: true,\n  imports: [..., DBCheckbox],\n  // ...\n})\n"})}),"\n",(0,c.jsx)(n.h3,{id:"use-component",children:"Use component"}),"\n",(0,c.jsx)(n.pre,{children:(0,c.jsx)(n.code,{className:"language-html",children:'\x3c!-- app.component.html --\x3e\n<ul>\n	@for (checkboxName of checkboxNames; track checkboxName) {\n	<li>\n		<db-checkbox\n			(change)="checkbox = checkboxName"\n			[label]="\'Checkbox \' + checkboxName"\n			[value]="checkboxName"\n			name="CheckboxGroup"\n		></db-checkbox>\n	</li>\n	}\n</ul>\n'})}),"\n",(0,c.jsx)(n.pre,{children:(0,c.jsx)(n.code,{className:"language-ts",children:'// app.component.ts\nimport { Component } from "@angular/core";\n\n@Component({\n	selector: "app-app",\n	templateUrl: "./app.component.html"\n})\nexport class AppComponent {\n	checkboxNames = ["X", "Y", "Z"];\n	checkbox = "";\n}\n'})}),"\n",(0,c.jsx)(n.h4,{id:"adding-formatted-infotext",children:"Adding Formatted Infotext"}),"\n",(0,c.jsxs)(n.p,{children:["The message property of the db-checkbox does not accept HTML content for security reasons (to prevent XSS attacks). To add a richly formatted description, use the ",(0,c.jsx)(n.code,{children:"db-infotext"})," component as a sibling element. You must link both components using the ",(0,c.jsx)(n.a,{href:"https://developer.mozilla.org/en-US/docs/Web/Accessibility/ARIA/Reference/Attributes/aria-describedby",children:(0,c.jsx)(n.code,{children:"aria-describedby"})}),"-HTML-attribute to ensure accessibility."]}),"\n",(0,c.jsx)(n.pre,{children:(0,c.jsx)(n.code,{className:"language-html",children:'<db-checkbox aria-describedby="checkbox-message">\n	Example Checkbox\n</db-checkbox>\n<db-infotext id="checkbox-message"> Example <strong>Text</strong> </db-infotext>\n'})}),"\n",(0,c.jsx)(n.pre,{children:(0,c.jsx)(n.code,{className:"language-ts",children:'import { Component } from "@angular/core";\nimport { DBCheckbox, DBInfotext } from "@db-ux/ngx-core-components";\n\n@Component({\n	selector: "app-root",\n	standalone: true,\n	imports: [DBCheckbox, DBInfotext],\n	templateUrl: "./app.component.html"\n})\nexport class AppComponent {}\n'})}),"\n",(0,c.jsx)(n.h2,{id:"how-to-use-with-template-driven-forms",children:"How to use with Template Driven Forms"}),"\n",(0,c.jsxs)(n.p,{children:["Third party controls require a ",(0,c.jsx)(n.code,{children:"ControlValueAccessor"})," to function with angular forms. Adding an ",(0,c.jsx)(n.code,{children:"ngDefaultControl"})," attribute will allow them to use that directive.\n",(0,c.jsx)(n.a,{href:"https://stackoverflow.com/a/46465959",children:"Further information"})]}),"\n",(0,c.jsx)(n.pre,{children:(0,c.jsx)(n.code,{className:"language-ts",children:"//app.component.ts\nimport { FormsModule } from '@angular/forms';\n\n@Component({\n	// ...\n	imports: [\n		// ...,\n		FormsModule\n    ],\n	// ...\n})\n"})}),"\n",(0,c.jsx)(n.pre,{children:(0,c.jsx)(n.code,{className:"language-html",children:'\x3c!-- form.component.html --\x3e\n<form>\n	<db-checkbox\n		(change)="checkbox = $event.target.checked"\n		name="checkbox"\n		label="Checkbox"\n	></db-checkbox>\n	<db-button type="button" variant="brand" (click)="showValues()"\n		>Get checkbox value</db-button\n	>\n</form>\n\n<h2>Output</h2>\n<dl>\n	<dt>checkbox\'s value</dt>\n	<dd>checkbox {{ checkbox ? "" : "un" }}checked</dd>\n</dl>\n'})}),"\n",(0,c.jsx)(n.pre,{children:(0,c.jsx)(n.code,{className:"language-ts",children:'// form.component.ts\nexport class FormComponent {\n	checkbox = "";\n	showValues(): void {\n		alert(JSON.stringify({ checkbox: this.checkbox }));\n	}\n}\n'})}),"\n",(0,c.jsx)(n.h2,{id:"how-to-use-with-reactive-forms",children:"How to use with Reactive Forms"}),"\n",(0,c.jsx)(n.p,{children:"coming soon â€¦ if your interested in contributing, you're very welcome ;)"})]})}function s(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},{wrapper:n}={...(0,t.R)(),...e.components};return n?(0,c.jsx)(n,{...e,children:(0,c.jsx)(r,{...e})}):r(e)}},50275:(e,n,o)=>{(window.__NEXT_P=window.__NEXT_P||[]).push(["/components/data-input/checkbox/docs/Angular",function(){return o(32321)}])}},e=>{e.O(0,[636,6593,8792],()=>e(e.s=50275)),_N_E=e.O()}]);