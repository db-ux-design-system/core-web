(self.webpackChunk_N_E=self.webpackChunk_N_E||[]).push([[3720],{1700:(e,s,d)=>{"use strict";d.r(s),d.d(s,{default:()=>h});var r=d(6029),t=d(16285),i=d(64103);let n=e=>{let{children:s}=e;return(0,r.jsx)(i.A,{children:s})};function l(e){let s={a:"a",code:"code",h1:"h1",h2:"h2",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",...(0,t.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(s.h1,{id:"dbradio",children:"DBRadio"}),"\n",(0,r.jsx)(s.h2,{id:"slots",children:"Slots"}),"\n",(0,r.jsxs)(s.table,{children:[(0,r.jsx)(s.thead,{children:(0,r.jsxs)(s.tr,{children:[(0,r.jsx)(s.th,{children:"Name"}),(0,r.jsx)(s.th,{children:"Description"})]})}),(0,r.jsx)(s.tbody,{children:(0,r.jsxs)(s.tr,{children:[(0,r.jsx)(s.td,{children:"children"}),(0,r.jsx)(s.td,{children:"default slot"})]})})]}),"\n",(0,r.jsx)(s.h2,{id:"events",children:"Events"}),"\n",(0,r.jsxs)(s.table,{children:[(0,r.jsx)(s.thead,{children:(0,r.jsxs)(s.tr,{children:[(0,r.jsx)(s.th,{children:"Name"}),(0,r.jsx)(s.th,{children:"Type"})]})}),(0,r.jsxs)(s.tbody,{children:[(0,r.jsxs)(s.tr,{children:[(0,r.jsx)(s.td,{children:"input / onInput"}),(0,r.jsx)(s.td,{children:"---"})]}),(0,r.jsxs)(s.tr,{children:[(0,r.jsx)(s.td,{children:"change / onChange"}),(0,r.jsx)(s.td,{children:"---"})]}),(0,r.jsxs)(s.tr,{children:[(0,r.jsx)(s.td,{children:"blur / onBlur"}),(0,r.jsx)(s.td,{children:"---"})]}),(0,r.jsxs)(s.tr,{children:[(0,r.jsx)(s.td,{children:"focus / onFocus"}),(0,r.jsx)(s.td,{children:"---"})]})]})]}),"\n",(0,r.jsx)(s.h2,{id:"properties",children:"Properties"}),"\n",(0,r.jsxs)(s.table,{children:[(0,r.jsx)(s.thead,{children:(0,r.jsxs)(s.tr,{children:[(0,r.jsx)(s.th,{children:"Name"}),(0,r.jsx)(s.th,{children:"Description"}),(0,r.jsx)(s.th,{children:"Type"}),(0,r.jsx)(s.th,{children:"Options"})]})}),(0,r.jsxs)(s.tbody,{children:[(0,r.jsxs)(s.tr,{children:[(0,r.jsx)(s.td,{children:"id"}),(0,r.jsxs)(s.td,{children:[(0,r.jsx)(s.a,{href:"https://developer.mozilla.org/en-US/docs/Web/HTML/Global_attributes/id",children:"ID"})," of the component, generated automatically for some components as a fallback if unset."]}),(0,r.jsx)(s.td,{children:"string"}),(0,r.jsx)(s.td,{})]}),(0,r.jsxs)(s.tr,{children:[(0,r.jsx)(s.td,{children:"checked"}),(0,r.jsx)(s.td,{children:"Define the radio or checkbox elements checked state"}),(0,r.jsx)(s.td,{children:"union"}),(0,r.jsx)(s.td,{children:(0,r.jsx)("pre",{children:(0,r.jsx)("code",{className:"code-pre-wrap",children:"boolean | string"})})})]}),(0,r.jsxs)(s.tr,{children:[(0,r.jsx)(s.td,{children:"size"}),(0,r.jsx)(s.td,{children:"The size attribute changes the font-size and other related sizes of the component."}),(0,r.jsx)(s.td,{children:"union"}),(0,r.jsx)(s.td,{children:(0,r.jsx)("pre",{children:(0,r.jsx)("code",{className:"code-pre-wrap",children:'"small" | "medium"'})})})]}),(0,r.jsxs)(s.tr,{children:[(0,r.jsx)(s.td,{children:"show-label / showLabel"}),(0,r.jsx)(s.td,{children:"Enables/disables the visibility of the label"}),(0,r.jsx)(s.td,{children:"union"}),(0,r.jsx)(s.td,{children:(0,r.jsx)("pre",{children:(0,r.jsx)("code",{className:"code-pre-wrap",children:"boolean | string"})})})]}),(0,r.jsxs)(s.tr,{children:[(0,r.jsx)(s.td,{children:"show-required-asterisk / showRequiredAsterisk"}),(0,r.jsxs)(s.td,{children:["This attribute allows to specify whether a form field which is marked as required will show a visual indicator (an asterisk '*').",(0,r.jsx)("br",{}),"It allows to prevent adding the visual indicator but still keep the field semantically required by setting its value to ",(0,r.jsx)(s.code,{children:"false"}),".",(0,r.jsx)("br",{}),"By default, its value is ",(0,r.jsx)(s.code,{children:"true"}),", so the asterisk is shown when ",(0,r.jsx)(s.code,{children:"required"})," is set."]}),(0,r.jsx)(s.td,{children:"union"}),(0,r.jsx)(s.td,{children:(0,r.jsx)("pre",{children:(0,r.jsx)("code",{className:"code-pre-wrap",children:"boolean | string"})})})]}),(0,r.jsxs)(s.tr,{children:[(0,r.jsx)(s.td,{children:"className"}),(0,r.jsx)(s.td,{children:"React specific for adding className to the component."}),(0,r.jsx)(s.td,{children:"string"}),(0,r.jsx)(s.td,{})]}),(0,r.jsxs)(s.tr,{children:[(0,r.jsx)(s.td,{children:"validation"}),(0,r.jsx)(s.td,{children:"Marks an input element as invalid (red) / valid (green) / no-validation (grey). Overwrites the :user-valid selector."}),(0,r.jsx)(s.td,{children:"union"}),(0,r.jsx)(s.td,{children:(0,r.jsx)("pre",{children:(0,r.jsx)("code",{className:"code-pre-wrap",children:'"invalid" | "valid" | "no-validation"'})})})]}),(0,r.jsxs)(s.tr,{children:[(0,r.jsx)(s.td,{children:"name"}),(0,r.jsx)(s.td,{children:"The name attribute gives the name of the form control, as used in form submission and in the form element's elements object."}),(0,r.jsx)(s.td,{children:"string"}),(0,r.jsx)(s.td,{})]}),(0,r.jsxs)(s.tr,{children:[(0,r.jsx)(s.td,{children:"disabled"}),(0,r.jsx)(s.td,{children:"The disabled attribute can be set to keep a user from clicking on the form element."}),(0,r.jsx)(s.td,{children:"union"}),(0,r.jsx)(s.td,{children:(0,r.jsx)("pre",{children:(0,r.jsx)("code",{className:"code-pre-wrap",children:"boolean | string"})})})]}),(0,r.jsxs)(s.tr,{children:[(0,r.jsx)(s.td,{children:"value"}),(0,r.jsx)(s.td,{children:"The value property is to receive results from the native form element."}),(0,r.jsx)(s.td,{children:"any"}),(0,r.jsx)(s.td,{})]}),(0,r.jsxs)(s.tr,{children:[(0,r.jsx)(s.td,{children:"required"}),(0,r.jsxs)(s.td,{children:["When the required attribute specified, the user will be required to fill the form element before submitting the form.",(0,r.jsx)("br",{}),"The form element will be marked semantically as required and by default also visually with an asterisk '*' next to the label (unless the property ",(0,r.jsx)(s.code,{children:"showRequiredAsterisk"})," is also set with the value ",(0,r.jsx)(s.code,{children:"false"}),")."]}),(0,r.jsx)(s.td,{children:"union"}),(0,r.jsx)(s.td,{children:(0,r.jsx)("pre",{children:(0,r.jsx)("code",{className:"code-pre-wrap",children:"boolean | string"})})})]}),(0,r.jsxs)(s.tr,{children:[(0,r.jsx)(s.td,{children:"label"}),(0,r.jsx)(s.td,{children:"The label attribute specifies the caption of the form element."}),(0,r.jsx)(s.td,{children:"string"}),(0,r.jsx)(s.td,{})]})]})]})]})}function h(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{};return(0,r.jsx)(n,{...e,children:(0,r.jsx)(l,{...e})})}},90845:(e,s,d)=>{(window.__NEXT_P=window.__NEXT_P||[]).push(["/components/data-input/radio/properties",function(){return d(1700)}])}},e=>{e.O(0,[4256,310,4580,6173,4103,636,6593,8792],()=>e(e.s=90845)),_N_E=e.O()}]);