(self.webpackChunk_N_E=self.webpackChunk_N_E||[]).push([[7298],{21627:(e,o,n)=>{"use strict";n.r(o),n.d(o,{default:()=>h});var s=n(6029),r=n(95105),i=n(16285);function l(e){let o={a:"a",code:"code",h1:"h1",h2:"h2",h3:"h3",li:"li",ol:"ol",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,i.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(o.h1,{id:"colors",children:"Colors"}),"\n",(0,s.jsxs)(o.ul,{children:["\n",(0,s.jsxs)(o.li,{children:["You use ",(0,s.jsx)(o.strong,{children:"Colors"})," to highlight an area with a specific color."]}),"\n",(0,s.jsxs)(o.li,{children:["You can also use it to change the text color for components with the ",(0,s.jsx)(o.code,{children:"*-transparent-semi"})," colors."]}),"\n",(0,s.jsxs)(o.li,{children:["Most classes/placeholders will change ",(0,s.jsx)(o.code,{children:"color"})," and ",(0,s.jsx)(o.code,{children:"background-color"})," and will set properties, which will be passed down to adaptive components."]}),"\n"]}),"\n",(0,s.jsx)(o.h2,{id:"how-to-use",children:"How to use"}),"\n",(0,s.jsxs)(o.ol,{children:["\n",(0,s.jsxs)(o.li,{children:["First, you can use our ",(0,s.jsx)(o.strong,{children:(0,s.jsx)(o.a,{href:"./color-usage-guide",children:"color usage guide"})})," to find out which method is best for coloring your layouts or components."]}),"\n",(0,s.jsxs)(o.li,{children:["The colors of layouts can be easily set using the predefined ",(0,s.jsx)(o.strong,{children:(0,s.jsx)(o.a,{href:"./color-schemes",children:"color schemes"})}),"."]}),"\n",(0,s.jsxs)(o.li,{children:["When developing your own components, ",(0,s.jsx)(o.code,{children:"SCSS"})," variables or ",(0,s.jsx)(o.code,{children:"CSS Custom Properties"})," should be used."]}),"\n"]}),"\n",(0,s.jsx)(o.p,{children:(0,s.jsx)(o.strong,{children:"\uD83D\uDEA7 The overview of our color variables is still in the making. Please come back soon."})}),"\n",(0,s.jsx)(o.h2,{id:"how-to-include-colors",children:"How to include colors"}),"\n",(0,s.jsxs)(o.p,{children:["For ",(0,s.jsx)(o.strong,{children:"CSS"})," and ",(0,s.jsx)(o.strong,{children:"Tailwind"})," you need to use the import ",(0,s.jsx)(o.code,{children:'@import "@db-ux/core-foundations/build/styles/colors/classes/all.css";'})," in your root ",(0,s.jsx)(o.code,{children:".css"})," file.\nOr if you only want a single variant e.g. ",(0,s.jsx)(o.strong,{children:"informational"})," you can import ",(0,s.jsx)(o.code,{children:'@import "@db-ux/core-foundations/build/styles/colors/classes/informational.css";'}),"."]}),"\n",(0,s.jsxs)(o.p,{children:["In case that you're either using a bundler (recommended) or importing the CSS within your JavaScript files, please adapt this ",(0,s.jsx)(o.code,{children:"@import"})," syntax accordingly."]}),"\n",(0,s.jsxs)(o.p,{children:["For ",(0,s.jsx)(o.strong,{children:"SCSS"})," you need to use the import ",(0,s.jsx)(o.code,{children:'@use "@db-ux/core-foundations/build/styles/colors/placeholder"'})," in your ",(0,s.jsx)(o.code,{children:".scss"})," file, where you need to reference the specific variable.\nThen you can use e.g. ",(0,s.jsx)(o.strong,{children:"informational"})," color by extending our SCSS placeholders like this: ",(0,s.jsx)(o.code,{children:"@extend %db-informational-bg-1"}),"."]}),"\n",(0,s.jsx)(o.h2,{id:"dark---light-mode",children:"Dark- & Light-Mode"}),"\n",(0,s.jsxs)(o.p,{children:["We provide tokens for both dark- and light-mode. If you include the ",(0,s.jsx)(o.strong,{children:"relative"})," style you get a media query ",(0,s.jsx)(o.code,{children:"@media (prefers-color-scheme: dark)"})," with the relevant tokens. You can ",(0,s.jsx)(o.a,{href:"https://developer.chrome.com/docs/devtools/rendering/emulate-css/",children:"emulate"})," the modes inside the devtools."]}),"\n",(0,s.jsxs)(o.p,{children:["It's ",(0,s.jsxs)(o.a,{href:"https://web.dev/articles/color-scheme#the_color-scheme_meta_tag",children:["recommended to set a ",(0,s.jsx)(o.code,{children:"meta"}),"-HTML-tag"]})," to provide a signal to the browser on your accepted color schemes previous to loading the CSS:"]}),"\n",(0,s.jsx)(o.pre,{children:(0,s.jsx)(o.code,{className:"language-html",children:'<meta name="color-scheme" content="dark light" />\n'})}),"\n",(0,s.jsxs)(o.p,{children:["We recommend using the default media query based on the user preference, but if you want to force a mode for your page, you could set the ",(0,s.jsx)(o.code,{children:"color-scheme"})," ",(0,s.jsx)(o.code,{children:"meta"}),"-HTML-tag to either ",(0,s.jsx)(o.a,{href:"https://developer.mozilla.org/en-US/docs/Web/HTML/Element/meta/name#only_light",children:(0,s.jsx)(o.code,{children:"only light"})}),", ",(0,s.jsxs)(o.a,{href:"https://developer.mozilla.org/en-US/docs/Web/HTML/Element/meta/name#light",children:[(0,s.jsx)(o.code,{children:"dark"})," or ",(0,s.jsx)(o.code,{children:"light"})]}),"."]}),"\n",(0,s.jsxs)(o.p,{children:['If you want to set it on a specific container as e.g. shown on the documentation page "Color schemes" you can do that by adding the HTML-attributes ',(0,s.jsx)(o.code,{children:'data-mode="dark"'})," or ",(0,s.jsx)(o.code,{children:'data-mode="light"'}),":"]}),"\n",(0,s.jsx)(o.h3,{id:"html",children:"HTML"}),"\n",(0,s.jsx)(o.pre,{children:(0,s.jsx)(o.code,{className:"language-html",children:'<div data-mode="dark">...</div>\n'})}),"\n",(0,s.jsxs)(o.p,{children:["We're providing an example in our ",(0,s.jsx)(o.a,{href:"./color-schemes",children:"color schemes documentation"}),"."]}),"\n",(0,s.jsxs)(o.p,{children:["We need to set the ",(0,s.jsx)(o.strong,{children:"base"})," background to the element with ",(0,s.jsx)(o.code,{children:"[data-mode]"})," so if you want to change the background to another color, make sure to use a wrapping tag like ",(0,s.jsx)(o.code,{children:"<div>"})," with the ",(0,s.jsx)(o.code,{children:"[data-mode]"})," to avoid issues."]})]})}function t(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},{wrapper:o}={...(0,i.R)(),...e.components};return o?(0,s.jsx)(o,{...e,children:(0,s.jsx)(l,{...e})}):l(e)}let c=e=>{let{children:o}=e;return(0,s.jsx)(r.A,{children:o})};function d(e){return(0,s.jsx)(t,{})}function h(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{};return(0,s.jsx)(c,{...e,children:(0,s.jsx)(d,{...e})})}},33237:(e,o,n)=>{(window.__NEXT_P=window.__NEXT_P||[]).push(["/foundations/colors/readme",function(){return n(21627)}])}},e=>{e.O(0,[4256,310,7830,9009,5105,636,6593,8792],()=>e(e.s=33237)),_N_E=e.O()}]);