@charset "utf-8";

@use "@db-ui/foundations/build/scss/default.assets-paths" as *;
@use "@db-ui/foundations/build/scss/variables" as *;
@use "@db-ui/foundations/build/scss/variables.global" as *;
@use "@db-ui/foundations/build/scss/helpers/functions" as *;
@use "@db-ui/foundations/build/scss/icon/icons.helpers" as *;
@use "@db-ui/foundations/build/scss/body-styles" as *;
@use "@db-ui/foundations/build/scss/color-placeholder" as *;
@use "@db-ui/foundations/build/scss/helpers/shadow-dom" as *;
@use "@db-ui/foundations/build/scss/color/color-variants" as *;
@use "@db-ui/foundations/build/scss/helpers/component";

@mixin label-focus-animation(
	$translationX: var(--db-input-padding-inline-start)
) {
	$transformScale: -1.25;

	transition: opacity 0.08s, transform 0.15s;
	opacity: var(--db-input-focus-opacity);

	// add 0.1em to adjust label with input padding-inline-start
	transform: translate(
			calc($translationX + 0.1em),
			calc($db-sizing-md * $transformScale)
		)
		scale(var(--db-input-label-scale));
}

.db-input {
	--db-input-padding-inline-start: #{$db-spacing-fixed-sm};
	--db-input-padding-inline-end: #{$db-spacing-fixed-sm};
	--icon-margin-after: 0;
	--db-input-label-max-width: 80%;

	@extend %shadow-dom-extend;
	position: relative;

	// padding-inline-end according to current amount of icons
	&:has(> .icon-before) {
		--db-input-padding-inline-start: #{calc(
				2 * $db-spacing-fixed-sm + 1.25rem - 0.375rem
			)};
		--db-input-label-max-width: 70%;

		input {
			padding-inline-start: var(--db-input-padding-inline-start);
		}
	}

	&:has(> .icon-after),
	&[data-variant] {
		--db-input-padding-inline-end: #{calc(
				2 * #{$db-spacing-fixed-sm} + 0.425rem
			)};

		input {
			padding-inline-end: var(--db-input-padding-inline-end);
		}
	}

	// two trailing icons
	&[data-variant]:has(> .icon-after) {
		--db-input-padding-inline-end: #{calc(
				2 * #{$db-spacing-fixed-sm} + 0.425rem + 0.75rem + #{$db-spacing-fixed-sm}
			)};
		--db-input-label-max-width: 61%;

		input {
			padding-inline-end: var(--db-input-padding-inline-end);
		}

		.icon-input-state {
			margin-inline-end: calc(0.75rem + 2 * $db-spacing-fixed-sm);
		}
	}

	.db-icon,
	db-icon {
		--icon-font-family: var(--db-base-icon-font-family);
		--icon-font-size: var(--db-base-icon-font-size);

		@extend %db-body-sm;

		height: var(--db-sizing-md);
		display: flex;
		align-items: center;
		position: absolute;
		top: 0;
		padding: 0 $db-spacing-fixed-sm;
	}

	.icon-after,
	dbicon.icon-after > .db-icon {
		right: 0;
	}

	// currently not supported by firefox
	&:has(> input:disabled) {
		.db-icon,
		.icon-input-state {
			opacity: 0.5;
		}
	}

	label {
		@extend %default-color;
		position: absolute;
		display: flex;
		align-items: center;
		font-size: var(--db-type-body-font-size-md);

		transform-origin: left;
		transform: translate(
			var(--db-input-padding-inline-start),
			calc(-1 * var(--db-sizing-md))
		);
		transition: transform 0.2s $db-transition-functional-timing;
		will-change: transform;
		height: $db-sizing-md;
		cursor: text;
		// setting max-width to prevent users from too long labels by displaying text-overflow: ellipsis
		max-width: var(--db-input-label-max-width, 80%);

		span:first-child {
			text-overflow: ellipsis;
			white-space: nowrap;
			overflow: hidden;
		}
	}

	.description {
		@extend %db-body-xs;
		margin: $db-spacing-fixed-2xs $db-spacing-fixed-sm 0;

		display: flex;
		align-items: flex-start;
		justify-content: space-between;
	}

	input {
		@extend %bg-transparent-hover;
		@extend %default-interactive-component;
		@extend %component-border;
		@include get-variant-bg-color(0.08);

		height: $db-sizing-md;
		max-width: 100%;
		width: 100%;
		padding: $db-spacing-fixed-xs var(--db-input-padding-inline-end)
			$db-spacing-fixed-xs var(--db-input-padding-inline-start);

		// TODO: Evaluate whether those could get moved to ../_form-elements.scss
		&:focus,
		&:not(:placeholder-shown) {
			padding-bottom: calc(
				$db-spacing-fixed-xs - var(--db-input-focus-opacity) *
					$db-spacing-fixed-xs
			);
			// move filled text for expressive and regular to center with focused label
			padding-top: calc(
				var(--db-spacing-fixed-xs) + 0.25em *
					var(--db-input-focus-opacity)
			);

			+ label {
				@include label-focus-animation();
			}
		}

		// TODO: Evaluate whether those could get moved to ../_form-elements.scss
		&:disabled,
		fieldset:disabled & {
			&,
			& + label {
				// Decided against cursor: not-allowed, compare to e.g. https://phabricator.wikimedia.org/T121960
				opacity: 0.25;
				pointer-events: none;
			}
		}

		&:required {
			+ label::after {
				content: " *";
				padding-left: 0.2rem;
			}
		}

		&[type="color"],
		&[type="date"],
		&[type="datetime-local"],
		&[type="email"],
		&[type="month"],
		&[type="number"],
		&[type="password"],
		&[type="search"],
		&[type="tel"],
		&[type="text"],
		&[type="time"],
		&[type="url"],
		&[type="week"] {
			@extend %db-body-sm;

			&:not([type="date"]):not([type="datetime-local"]):not(
					[type="month"]
				):not([type="time"]):not([type="week"])
				+ label {
				// Adopted by https://www.heise.de/developer/artikel/a11y-Reduced-Motion-4356171.html
				@media (prefers-reduced-motion: reduce) {
					transition-duration: 0.01s !important;
				}
			}

			// Hiding inputs placeholder for floating label
			&::placeholder {
				opacity: 0;
			}

			&:focus {
				&::placeholder {
					opacity: 0.5;
				}
			}
		}

		&[type="search"] {
			$paddingLeft: calc($db-spacing-fixed-sm * 2 + 0.625rem);

			padding-inline-start: var(--db-input-padding-inline-start);

			&,
			& + label {
				--db-input-padding-inline-start: #{calc(
						$db-spacing-fixed-sm * 2 + 0.625rem
					)};
			}

			& ~ .icon-input-state {
				// TODO replace with svg icon
				@include icon(glyph(search), 20, "filled", "before", false);
			}

			+ label {
				transform: translate(
					$paddingLeft,
					calc(-1 * var(--db-sizing-md))
				);
			}

			~ .description {
				padding-inline-start: $paddingLeft;
			}

			&:focus,
			&:not(:placeholder-shown) {
				&:not(:disabled) {
					+ label {
						padding-inline-start: 0;
					}
				}
			}

			// https://stackoverflow.com/questions/20804016/editing-input-type-search-pseudo-element-button-x
			&::-webkit-search-cancel-button {
				appearance: none;
				position: absolute;
				right: $db-spacing-fixed-sm;
				top: 0;
				height: $db-sizing-md;
				width: 1em;
				background: url(#{$icons-path}functional/images/navigation/db_ic_cancel_24.svg)
					no-repeat 50% 50%;
				background-size: contain;
				cursor: pointer;
				transition: opacity 0.12s;
			}
		}
	}

	// #variations
	.icon-input-state {
		--icon-font-family: var(--db-base-icon-font-family-filled);
		--icon-font-size: var(--db-base-icon-font-size);
		display: flex;
		align-items: center;
		flex-direction: row;
		position: absolute;
		top: 0;
		padding: 0 $db-spacing-fixed-xs;
		height: $db-sizing-md;

		pointer-events: none;
		right: 0;

		&::before {
			--icon-font-family: var(--db-base-icon-font-family-filled);
			--icon-font-size: var(--db-base-icon-font-size);
		}

		// angular specific nesting
		> .db-icon {
			position: static;
			padding: 0;

			&::before {
				--icon-font-family: var(--db-base-icon-font-family-filled);
				--icon-font-size: var(--db-base-icon-font-size);
			}
		}
	}

	&[data-variant="critical"] {
		color: $db-colors-critical-on-bg-enabled;
	}

	// Variant error or invalid state
	&[data-variant="critical"] input,
	input:required:invalid:not(:placeholder-shown),
	input[aria-invalid="true"] {
		--db-current-border-color: var(
			--db-colors-critical-border-enabled,
			#{$db-colors-critical-border-enabled}
		);
		@extend %db-bg-critical-transparent-semi;
		@extend %db-bg-critical-transparent-semi-hover-state;

		& + label {
			color: $db-colors-critical-on-bg-enabled;
		}

		& ~ .description,
		& ~ .icon-input-state {
			color: $db-colors-critical-enabled;
		}

		& ~ .icon-input-state {
			// TODO fix this workaround after new icon implementation
			--icon-glyph: "\e1123";
			@include icon(glyph(error), 24, "filled", "after", false);
		}
	}

	&[data-variant="warning"] input {
		--db-current-border-color: var(
			--db-colors-warning-border-enabled,
			#{$db-colors-warning-border-enabled}
		);
		@extend %db-bg-warning-transparent-semi;
		@extend %db-bg-warning-transparent-semi-hover-state;

		& + label {
			color: $db-colors-warning-on-bg-enabled;
		}

		& ~ .description,
		& ~ .icon-input-state,
		& ~ .icon-input-state .db-icon {
			color: $db-colors-warning-element-enabled;
		}

		& ~ .icon-input-state,
		& ~ .icon-input-state .db-icon {
			@include icon(glyph(error-triangle), 20, "filled", "after", false);
		}
	}

	&[data-variant="successful"] input {
		--db-current-border-color: var(
			--db-colors-successful-border-enabled,
			#{$db-colors-successful-border-enabled}
		);
		@extend %db-bg-successful-transparent-semi;
		@extend %db-bg-successful-transparent-semi-hover-state;

		& + label {
			color: $db-colors-successful-on-bg-enabled;
		}

		& ~ .description,
		& ~ .icon-input-state,
		& ~ .icon-input-state .db-icon {
			color: $db-colors-successful-element-enabled;
		}

		& ~ .icon-input-state,
		& ~ .icon-input-state .db-icon {
			@include icon(glyph(check-circle), 20, "filled", "after", false);
		}
	}

	&[data-variant="informational"] input {
		--db-current-border-color: var(
			--db-colors-informational-border-enabled,
			#{$db-colors-informational-border-enabled}
		);
		@extend %db-bg-informational-transparent-semi;
		@extend %db-bg-informational-transparent-semi-hover-state;

		& + label {
			color: $db-colors-informational-on-bg-enabled;
		}

		& ~ .description,
		& ~ .icon-input-state,
		& ~ .icon-input-state .db-icon {
			color: $db-colors-informational-element-enabled;
		}

		& ~ .icon-input-state,
		& ~ .icon-input-state .db-icon {
			@include icon(glyph(info), 20, "filled", "after", false);
		}
	}
}

// disable transform animation for functional input
.db-ui-functional .db-input > label {
	&:focus,
	&:not(:placeholder-shown) {
		&:not(:disabled) {
			transform: translate(
				var(--db-input-padding-inline-start),
				calc(-1 * var(--db-sizing-md))
			);
		}
	}
}

.db-ui-regular,
.db-ui-expressive {
	.db-input > input[type="date"]::-webkit-calendar-picker-indicator,
	.db-input > input[type="week"]::-webkit-calendar-picker-indicator,
	.db-input
		> input[type="datetime-local"]::-webkit-calendar-picker-indicator {
		// TODO change icon and use db-icons to adopt color for data-variants
		margin-top: -0.75em;
		padding: 0;
	}
}

.db-ui-functional {
	.db-input > input {
		&:disabled {
			&:not(:placeholder-shown) {
				+ label {
					opacity: 0;
				}
			}
		}
	}
}
