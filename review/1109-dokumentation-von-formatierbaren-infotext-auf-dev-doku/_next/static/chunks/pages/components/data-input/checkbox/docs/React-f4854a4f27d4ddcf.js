(self.webpackChunk_N_E=self.webpackChunk_N_E||[]).push([[8926],{41365:(e,n,t)=>{(window.__NEXT_P=window.__NEXT_P||[]).push(["/components/data-input/checkbox/docs/React",function(){return t(77468)}])},77468:(e,n,t)=>{"use strict";t.r(n),t.d(n,{default:()=>r});var o=t(6029),c=t(16285);function s(e){let n={a:"a",code:"code",h2:"h2",h3:"h3",h4:"h4",p:"p",pre:"pre",...(0,c.R)(),...e.components};return(0,o.jsxs)(o.Fragment,{children:[(0,o.jsx)(n.h2,{id:"react",children:"React"}),"\n",(0,o.jsxs)(n.p,{children:["For general installation and configuration take a look at the ",(0,o.jsx)(n.a,{href:"https://www.npmjs.com/package/@db-ux/react-core-components",children:"react-core-components"})," package."]}),"\n",(0,o.jsx)(n.h3,{id:"use-component",children:"Use component"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-tsx",children:'// App.tsx\nimport { useState } from "react";\nimport { DBCheckbox } from "@db-ux/react-core-components";\n\nconst App = () => {\n	const [checkbox, setCheckbox] = useState("");\n\n	return (\n		<DBCheckbox\n			name="checkbox"\n			value="Checkbox checked"\n			onChange={(event) => {\n				setCheckbox(event.target.checked);\n			}}\n		>\n			Checkbox\n		</DBCheckbox>\n	);\n};\n\nexport default App;\n'})}),"\n",(0,o.jsx)(n.h4,{id:"adding-formatted-infotext",children:"Adding Formatted Infotext"}),"\n",(0,o.jsx)(n.p,{children:"The message prop of the DBCheckbox does not accept React Nodes or HTML for security reasons (to prevent Cross-Site Scripting (XSS)). To add a richly formatted description, use the DBInfotext component as a sibling element. It is crucial to link both components using the aria-describedby attribute to ensure accessibility."}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-tsx",children:'import { DBCheckbox, DBInfotext } from "@db-ux/react-core-components";\n\nconst App = () => {\n	return (\n		<div>\n			<DBCheckbox\n				// The aria-describedby attribute links the checkbox to its description.\n				aria-describedby="checkbox-message"\n			>\n				Example Checkbox\n			</DBCheckbox>\n\n			{/* The DBInfotext component holds the formatted message. */}\n			<DBInfotext id="checkbox-message">\n				<span>\n					Example <b>Text</b>\n				</span>\n			</DBInfotext>\n		</div>\n	);\n};\n\nexport default App;\n'})})]})}function r(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},{wrapper:n}={...(0,c.R)(),...e.components};return n?(0,o.jsx)(n,{...e,children:(0,o.jsx)(s,{...e})}):s(e)}}},e=>{e.O(0,[636,6593,8792],()=>e(e.s=41365)),_N_E=e.O()}]);