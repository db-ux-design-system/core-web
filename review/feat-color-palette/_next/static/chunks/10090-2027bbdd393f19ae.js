"use strict";(self.webpackChunk_N_E=self.webpackChunk_N_E||[]).push([[10090],{10090:function(e,n,a){a.r(n);var r=a(52322),o=a(2784),t=a(9513),s=a(33878),l=a(95696),d=a(79041),c=a(16909),i=a(16134);n.default=()=>{let[e,n]=(0,o.useState)();return(0,o.useEffect)(()=>{e&&setTimeout(()=>n(""),1500)},[e]),(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(t.Z,{className:"tab-container",children:(0,r.jsxs)(s.Z,{children:[(0,r.jsxs)(l.Z,{children:[(0,r.jsx)(d.Z,{children:"Angular"}),(0,r.jsx)(d.Z,{children:"HTML"}),(0,r.jsx)(d.Z,{children:"React"}),(0,r.jsx)(d.Z,{children:"Vue"})]}),(0,r.jsxs)(c.Z,{children:[(0,r.jsx)("pre",{children:(0,r.jsx)("code",{className:"hljs language-html",children:'<db-drawer [open]="openDrawer" (onClose)="toggleDrawer(false)">\n	functional\n</db-drawer>'})}),(0,r.jsx)(i.Z,{className:"copy-button",noText:!0,icon:'<db-drawer [open]="openDrawer" (onClose)="toggleDrawer(false)">\n	functional\n</db-drawer>'===e?"done":"copy",variant:"ghost",onClick:()=>{n('<db-drawer [open]="openDrawer" (onClose)="toggleDrawer(false)">\n	functional\n</db-drawer>'),navigator.clipboard.writeText('<db-drawer [open]="openDrawer" (onClose)="toggleDrawer(false)">\n	functional\n</db-drawer>')},children:"Copy"})]}),(0,r.jsxs)(c.Z,{children:[(0,r.jsx)("pre",{children:(0,r.jsx)("code",{className:"hljs language-html",children:'<dialog class="db-drawer" data-backdrop="strong" open>\n  <article class="db-drawer-container">\n    <header class="db-drawer-header">\n      <button\n        class="db-button button-close-drawer is-icon-text-replace"\n        data-icon="close"\n        data-variant="text"\n      >\n        Close Button\n      </button>\n    </header>\n    <div class="db-drawer-content">functional</div>\n  </article>\n</dialog>'})}),(0,r.jsx)(i.Z,{className:"copy-button",noText:!0,icon:'<dialog class="db-drawer" data-backdrop="strong" open>\n  <article class="db-drawer-container">\n    <header class="db-drawer-header">\n      <button\n        class="db-button button-close-drawer is-icon-text-replace"\n        data-icon="close"\n        data-variant="text"\n      >\n        Close Button\n      </button>\n    </header>\n    <div class="db-drawer-content">functional</div>\n  </article>\n</dialog>'===e?"done":"copy",variant:"ghost",onClick:()=>{n('<dialog class="db-drawer" data-backdrop="strong" open>\n  <article class="db-drawer-container">\n    <header class="db-drawer-header">\n      <button\n        class="db-button button-close-drawer is-icon-text-replace"\n        data-icon="close"\n        data-variant="text"\n      >\n        Close Button\n      </button>\n    </header>\n    <div class="db-drawer-content">functional</div>\n  </article>\n</dialog>'),navigator.clipboard.writeText('<dialog class="db-drawer" data-backdrop="strong" open>\n  <article class="db-drawer-container">\n    <header class="db-drawer-header">\n      <button\n        class="db-button button-close-drawer is-icon-text-replace"\n        data-icon="close"\n        data-variant="text"\n      >\n        Close Button\n      </button>\n    </header>\n    <div class="db-drawer-content">functional</div>\n  </article>\n</dialog>')},children:"Copy"})]}),(0,r.jsxs)(c.Z,{children:[(0,r.jsx)("pre",{children:(0,r.jsx)("code",{className:"hljs language-tsx",children:"<DBDrawer\n  open={open}\n  onClose={() => {\n    setOpen(false)\n  }}\n>\n  functional\n</DBDrawer>"})}),(0,r.jsx)(i.Z,{className:"copy-button",noText:!0,icon:"<DBDrawer\n  open={open}\n  onClose={() => {\n    setOpen(false)\n  }}\n>\n  functional\n</DBDrawer>"===e?"done":"copy",variant:"ghost",onClick:()=>{n("<DBDrawer\n  open={open}\n  onClose={() => {\n    setOpen(false)\n  }}\n>\n  functional\n</DBDrawer>"),navigator.clipboard.writeText("<DBDrawer\n  open={open}\n  onClose={() => {\n    setOpen(false)\n  }}\n>\n  functional\n</DBDrawer>")},children:"Copy"})]}),(0,r.jsxs)(c.Z,{children:[(0,r.jsx)("pre",{children:(0,r.jsx)("code",{className:"hljs language-tsx",children:'<DBDrawer :open="openDrawer" @close="toggleDrawer(false)">\n		functional\n	</DBDrawer>'})}),(0,r.jsx)(i.Z,{className:"copy-button",noText:!0,icon:'<DBDrawer :open="openDrawer" @close="toggleDrawer(false)">\n		functional\n	</DBDrawer>'===e?"done":"copy",variant:"ghost",onClick:()=>{n('<DBDrawer :open="openDrawer" @close="toggleDrawer(false)">\n		functional\n	</DBDrawer>'),navigator.clipboard.writeText('<DBDrawer :open="openDrawer" @close="toggleDrawer(false)">\n		functional\n	</DBDrawer>')},children:"Copy"})]})]})}),(0,r.jsx)(t.Z,{className:"tab-container",children:(0,r.jsxs)(s.Z,{children:[(0,r.jsxs)(l.Z,{children:[(0,r.jsx)(d.Z,{children:"Angular"}),(0,r.jsx)(d.Z,{children:"HTML"}),(0,r.jsx)(d.Z,{children:"React"}),(0,r.jsx)(d.Z,{children:"Vue"})]}),(0,r.jsxs)(c.Z,{children:[(0,r.jsx)("pre",{children:(0,r.jsx)("code",{className:"hljs language-html",children:'<db-drawer [open]="openDrawer" (onClose)="toggleDrawer(false)">\n	Regular (Default)\n</db-drawer>'})}),(0,r.jsx)(i.Z,{className:"copy-button",noText:!0,icon:'<db-drawer [open]="openDrawer" (onClose)="toggleDrawer(false)">\n	Regular (Default)\n</db-drawer>'===e?"done":"copy",variant:"ghost",onClick:()=>{n('<db-drawer [open]="openDrawer" (onClose)="toggleDrawer(false)">\n	Regular (Default)\n</db-drawer>'),navigator.clipboard.writeText('<db-drawer [open]="openDrawer" (onClose)="toggleDrawer(false)">\n	Regular (Default)\n</db-drawer>')},children:"Copy"})]}),(0,r.jsxs)(c.Z,{children:[(0,r.jsx)("pre",{children:(0,r.jsx)("code",{className:"hljs language-html",children:'<dialog class="db-drawer" data-backdrop="strong" open>\n  <article class="db-drawer-container">\n    <header class="db-drawer-header">\n      <button\n        class="db-button button-close-drawer is-icon-text-replace"\n        data-icon="close"\n        data-variant="text"\n      >\n        Close Button\n      </button>\n    </header>\n    <div class="db-drawer-content">Regular (Default)</div>\n  </article>\n</dialog>'})}),(0,r.jsx)(i.Z,{className:"copy-button",noText:!0,icon:'<dialog class="db-drawer" data-backdrop="strong" open>\n  <article class="db-drawer-container">\n    <header class="db-drawer-header">\n      <button\n        class="db-button button-close-drawer is-icon-text-replace"\n        data-icon="close"\n        data-variant="text"\n      >\n        Close Button\n      </button>\n    </header>\n    <div class="db-drawer-content">Regular (Default)</div>\n  </article>\n</dialog>'===e?"done":"copy",variant:"ghost",onClick:()=>{n('<dialog class="db-drawer" data-backdrop="strong" open>\n  <article class="db-drawer-container">\n    <header class="db-drawer-header">\n      <button\n        class="db-button button-close-drawer is-icon-text-replace"\n        data-icon="close"\n        data-variant="text"\n      >\n        Close Button\n      </button>\n    </header>\n    <div class="db-drawer-content">Regular (Default)</div>\n  </article>\n</dialog>'),navigator.clipboard.writeText('<dialog class="db-drawer" data-backdrop="strong" open>\n  <article class="db-drawer-container">\n    <header class="db-drawer-header">\n      <button\n        class="db-button button-close-drawer is-icon-text-replace"\n        data-icon="close"\n        data-variant="text"\n      >\n        Close Button\n      </button>\n    </header>\n    <div class="db-drawer-content">Regular (Default)</div>\n  </article>\n</dialog>')},children:"Copy"})]}),(0,r.jsxs)(c.Z,{children:[(0,r.jsx)("pre",{children:(0,r.jsx)("code",{className:"hljs language-tsx",children:"<DBDrawer\n  open={open}\n  onClose={() => {\n    setOpen(false)\n  }}\n>\n  Regular (Default)\n</DBDrawer>"})}),(0,r.jsx)(i.Z,{className:"copy-button",noText:!0,icon:"<DBDrawer\n  open={open}\n  onClose={() => {\n    setOpen(false)\n  }}\n>\n  Regular (Default)\n</DBDrawer>"===e?"done":"copy",variant:"ghost",onClick:()=>{n("<DBDrawer\n  open={open}\n  onClose={() => {\n    setOpen(false)\n  }}\n>\n  Regular (Default)\n</DBDrawer>"),navigator.clipboard.writeText("<DBDrawer\n  open={open}\n  onClose={() => {\n    setOpen(false)\n  }}\n>\n  Regular (Default)\n</DBDrawer>")},children:"Copy"})]}),(0,r.jsxs)(c.Z,{children:[(0,r.jsx)("pre",{children:(0,r.jsx)("code",{className:"hljs language-tsx",children:'<DBDrawer :open="openDrawer" @close="toggleDrawer(false)">\n		Regular (Default)\n	</DBDrawer>'})}),(0,r.jsx)(i.Z,{className:"copy-button",noText:!0,icon:'<DBDrawer :open="openDrawer" @close="toggleDrawer(false)">\n		Regular (Default)\n	</DBDrawer>'===e?"done":"copy",variant:"ghost",onClick:()=>{n('<DBDrawer :open="openDrawer" @close="toggleDrawer(false)">\n		Regular (Default)\n	</DBDrawer>'),navigator.clipboard.writeText('<DBDrawer :open="openDrawer" @close="toggleDrawer(false)">\n		Regular (Default)\n	</DBDrawer>')},children:"Copy"})]})]})}),(0,r.jsx)(t.Z,{className:"tab-container",children:(0,r.jsxs)(s.Z,{children:[(0,r.jsxs)(l.Z,{children:[(0,r.jsx)(d.Z,{children:"Angular"}),(0,r.jsx)(d.Z,{children:"HTML"}),(0,r.jsx)(d.Z,{children:"React"}),(0,r.jsx)(d.Z,{children:"Vue"})]}),(0,r.jsxs)(c.Z,{children:[(0,r.jsx)("pre",{children:(0,r.jsx)("code",{className:"hljs language-html",children:'<db-drawer [open]="openDrawer" (onClose)="toggleDrawer(false)">\n	expressive\n</db-drawer>'})}),(0,r.jsx)(i.Z,{className:"copy-button",noText:!0,icon:'<db-drawer [open]="openDrawer" (onClose)="toggleDrawer(false)">\n	expressive\n</db-drawer>'===e?"done":"copy",variant:"ghost",onClick:()=>{n('<db-drawer [open]="openDrawer" (onClose)="toggleDrawer(false)">\n	expressive\n</db-drawer>'),navigator.clipboard.writeText('<db-drawer [open]="openDrawer" (onClose)="toggleDrawer(false)">\n	expressive\n</db-drawer>')},children:"Copy"})]}),(0,r.jsxs)(c.Z,{children:[(0,r.jsx)("pre",{children:(0,r.jsx)("code",{className:"hljs language-html",children:'<dialog class="db-drawer" data-backdrop="strong" open>\n  <article class="db-drawer-container">\n    <header class="db-drawer-header">\n      <button\n        class="db-button button-close-drawer is-icon-text-replace"\n        data-icon="close"\n        data-variant="text"\n      >\n        Close Button\n      </button>\n    </header>\n    <div class="db-drawer-content">expressive</div>\n  </article>\n</dialog>'})}),(0,r.jsx)(i.Z,{className:"copy-button",noText:!0,icon:'<dialog class="db-drawer" data-backdrop="strong" open>\n  <article class="db-drawer-container">\n    <header class="db-drawer-header">\n      <button\n        class="db-button button-close-drawer is-icon-text-replace"\n        data-icon="close"\n        data-variant="text"\n      >\n        Close Button\n      </button>\n    </header>\n    <div class="db-drawer-content">expressive</div>\n  </article>\n</dialog>'===e?"done":"copy",variant:"ghost",onClick:()=>{n('<dialog class="db-drawer" data-backdrop="strong" open>\n  <article class="db-drawer-container">\n    <header class="db-drawer-header">\n      <button\n        class="db-button button-close-drawer is-icon-text-replace"\n        data-icon="close"\n        data-variant="text"\n      >\n        Close Button\n      </button>\n    </header>\n    <div class="db-drawer-content">expressive</div>\n  </article>\n</dialog>'),navigator.clipboard.writeText('<dialog class="db-drawer" data-backdrop="strong" open>\n  <article class="db-drawer-container">\n    <header class="db-drawer-header">\n      <button\n        class="db-button button-close-drawer is-icon-text-replace"\n        data-icon="close"\n        data-variant="text"\n      >\n        Close Button\n      </button>\n    </header>\n    <div class="db-drawer-content">expressive</div>\n  </article>\n</dialog>')},children:"Copy"})]}),(0,r.jsxs)(c.Z,{children:[(0,r.jsx)("pre",{children:(0,r.jsx)("code",{className:"hljs language-tsx",children:"<DBDrawer\n  open={open}\n  onClose={() => {\n    setOpen(false)\n  }}\n>\n  expressive\n</DBDrawer>"})}),(0,r.jsx)(i.Z,{className:"copy-button",noText:!0,icon:"<DBDrawer\n  open={open}\n  onClose={() => {\n    setOpen(false)\n  }}\n>\n  expressive\n</DBDrawer>"===e?"done":"copy",variant:"ghost",onClick:()=>{n("<DBDrawer\n  open={open}\n  onClose={() => {\n    setOpen(false)\n  }}\n>\n  expressive\n</DBDrawer>"),navigator.clipboard.writeText("<DBDrawer\n  open={open}\n  onClose={() => {\n    setOpen(false)\n  }}\n>\n  expressive\n</DBDrawer>")},children:"Copy"})]}),(0,r.jsxs)(c.Z,{children:[(0,r.jsx)("pre",{children:(0,r.jsx)("code",{className:"hljs language-tsx",children:'<DBDrawer :open="openDrawer" @close="toggleDrawer(false)">\n		expressive\n	</DBDrawer>'})}),(0,r.jsx)(i.Z,{className:"copy-button",noText:!0,icon:'<DBDrawer :open="openDrawer" @close="toggleDrawer(false)">\n		expressive\n	</DBDrawer>'===e?"done":"copy",variant:"ghost",onClick:()=>{n('<DBDrawer :open="openDrawer" @close="toggleDrawer(false)">\n		expressive\n	</DBDrawer>'),navigator.clipboard.writeText('<DBDrawer :open="openDrawer" @close="toggleDrawer(false)">\n		expressive\n	</DBDrawer>')},children:"Copy"})]})]})})]})}}}]);