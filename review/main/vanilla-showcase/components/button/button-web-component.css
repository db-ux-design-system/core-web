.db-button[data-size=small] {
  --db-base-icon-font-size: var(--db-base-icon-font-size-sm);
  --db-base-icon-font-family: var(--db-base-icon-font-family-sm);
  /* prettier-ignore */
  --db-base-icon-font-family-filled: var(--db-base-icon-font-family-filled-sm);
  --db-base-line-height: var(--db-type-body-line-height-sm);
  --db-base-font-size: var(--db-type-body-font-size-sm);
  line-height: var(--db-type-body-line-height-sm);
  font-size: var(--db-type-body-font-size-sm);
}

.db-button[data-variant=primary] {
  background-color: #ec0016;
  color: #ffffff;
}
.db-button[data-variant=primary]:not(:disabled):hover {
  --db-current-background-color: var(--db-colors-primary-hover, #d90014);
  background-color: var(--db-current-background-color, #d90014);
}
.db-button[data-variant=primary]:not(:disabled):active {
  --db-current-background-color: var(--db-colors-primary-pressed, #c70012);
  background-color: var(--db-current-background-color, #c70012);
}

.db-button {
  background-color: rgba(var(--db-current-background-color-red), var(--db-current-background-color-green), var(--db-current-background-color-blue), var(--db-current-background-color-alpha, 0));
}

.db-button:not(:disabled):hover {
  background-color: rgba(var(--db-current-background-color-red), var(--db-current-background-color-green), var(--db-current-background-color-blue), var(--db-current-background-color-alpha, 0.16));
}

.db-button:not(:disabled):active {
  background-color: rgba(var(--db-current-background-color-red), var(--db-current-background-color-green), var(--db-current-background-color-blue), var(--db-current-background-color-alpha, 0.24));
}

/* TODO: We should get the variables from UX */
.db-button {
  border: solid 1px var(--db-current-color, #242629);
}

.db-button[data-variant=primary], .db-button[data-variant=semi-transparent], .db-button[data-variant=transparent] {
  border: solid 1px transparent;
}

.db-button {
  border-radius: 0.25rem;
}

.db-button {
  color: var(--db-current-color, #242629);
}

.db-button {
  transition: background-color var(--db-transition-color, 0.3s cubic-bezier(0.15, 0, 0.45, 1));
}

.db-button {
  --loadingIndicator---color: currentColor;
  align-items: center;
  display: inline-flex;
  font-weight: 700;
  justify-content: center;
  height: var(--db-sizing-md);
  padding: var(--db-spacing-fixed-xs) var(--db-spacing-fixed-md);
  white-space: nowrap;
  text-align: center;
}
.db-button[data-icon], .db-button[data-icon-before] {
  padding-left: var(--db-spacing-fixed-xs);
}
.db-button[data-icon]::before, .db-button[data-icon-before]::before {
  --icon-font-family: var(--db-base-icon-font-family);
  --icon-font-size: var(--db-base-icon-font-size);
}
.db-button[data-icon-after] {
  padding-right: var(--db-spacing-fixed-xs);
}
.db-button[data-icon-after]::after {
  --icon-font-family: var(--db-base-icon-font-family);
  --icon-font-size: var(--db-base-icon-font-size);
}
.db-button.is-icon-text-replace {
  font-size: 0;
  padding: 0;
  width: var(--db-sizing-md);
}
.db-button[data-size=small] {
  height: var(--db-sizing-sm);
}
.db-button[data-size=small]:not(.is-icon-text-replace) {
  padding: var(--db-spacing-fixed-3xs) var(--db-spacing-fixed-sm);
}
.db-button[data-size=small].is-icon-text-replace {
  width: var(--db-sizing-sm);
}
.db-button[data-width=full] {
  width: 100%;
}
.db-button[data-variant=semi-transparent] {
  background-color: rgba(var(--db-current-background-color-red), var(--db-current-background-color-green), var(--db-current-background-color-blue), var(--db-current-background-color-alpha, 0.08));
}
.db-button:disabled {
  opacity: 0.25;
}
.db-button[data-state=loading] {
  font-size: 0 !important;
}
.db-button[data-state=loading]::before {
  --icon-margin-after: 0;
}
.db-button[data-state=loading]::before {
  content: "";
}
.db-button[data-state=loading] {
  font-size: 0;
}
